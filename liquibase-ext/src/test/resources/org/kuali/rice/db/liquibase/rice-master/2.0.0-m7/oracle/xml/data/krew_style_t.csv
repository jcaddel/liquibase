"STYLE_ID","NM","XML","ACTV_IND","VER_NBR","OBJ_ID"
"2009","eDoc.Example1.Style","<xsl:stylesheet xmlns:my-class=""xalan://org.kuali.rice.kew.edl.WorkflowFunctions"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" version=""1.0"">${liquibase.lf}        <!-- widgets is simply more xslt that contains common functionality that greatly simplifies html rendering. It is somewhat complicated but does not require changes or full understanding unless enhancements are required.  -->${liquibase.lf}        <xsl:include href=""widgets""/>${liquibase.lf}        <xsl:output indent=""yes"" method=""html"" omit-xml-declaration=""yes"" version=""4.01""/>${liquibase.lf}        <!-- variables in the current version of xslt cannot be changed once set. Below they are set to various values often fed by java classes or to values contained in workflow xml. Not all of these are used in this form but are shown because often they can be useful. The ones prefixed with my-class are methods that are exposed by workflow to Edoclite.-->${liquibase.lf}        <xsl:variable name=""actionable"" select=""/documentContent/documentState/actionable""/>${liquibase.lf}        <xsl:variable name=""docHeaderId"" select=""/documentContent/documentState/docId""/>${liquibase.lf}        <xsl:variable name=""editable"" select=""/documentContent/documentState/editable""/>${liquibase.lf}        <xsl:variable name=""globalReadOnly"" select=""/documentContent/documentState/editable != 'true'""/>${liquibase.lf}        <xsl:variable name=""docStatus"" select=""//documentState/workflowDocumentState/status""/>${liquibase.lf}        <xsl:variable name=""isAtNodeInitiated"" select=""my-class:isAtNode($docHeaderId, 'Initiated')""/>${liquibase.lf}        <xsl:variable name=""isPastInitiated"" select=""my-class:isNodeInPreviousNodeList('Initiated', $docHeaderId)""/>${liquibase.lf}        <xsl:variable name=""isUserInitiator"" select=""my-class:isUserInitiator($docHeaderId)""/>${liquibase.lf}        <xsl:param name=""overrideMain"" select=""'true'""/>${liquibase.lf}        <!-- mainForm begins here. Execution of stylesheet begins here. It calls other templates which can call other templates. Position of templates beyond this point do not matter. -->${liquibase.lf}        <xsl:template name=""mainForm"">${liquibase.lf}          <html xmlns="""">${liquibase.lf}            <head>${liquibase.lf}              <script language=""javascript""/>${liquibase.lf}              <xsl:call-template name=""htmlHead""/>${liquibase.lf}            </head>${liquibase.lf}            <body onload=""onPageLoad()"">${liquibase.lf}              <xsl:call-template name=""errors""/>${liquibase.lf}              <!-- the header is usefule because it tells the user whether they are in 'Editing' mode or 'Read Only' mode. -->${liquibase.lf}              <xsl:call-template name=""header""/>${liquibase.lf}              <xsl:call-template name=""instructions""/>${liquibase.lf}              <xsl:variable name=""formTarget"" select=""'EDocLite'""/>${liquibase.lf}              <!-- validateOnSubmit is a function in edoclite1.js which also supports edloclite forms and can be somewhat complicated but does not require modification unless enhancements are required. -->${liquibase.lf}              <form action=""{$formTarget}"" enctype=""multipart/form-data"" id=""edoclite"" method=""post"" onsubmit=""return validateOnSubmit(this)"">${liquibase.lf}                <xsl:call-template name=""hidden-params""/>${liquibase.lf}                <xsl:call-template name=""mainBody""/>${liquibase.lf}                <xsl:call-template name=""notes""/>${liquibase.lf}                <br/>${liquibase.lf}                <xsl:call-template name=""buttons""/>${liquibase.lf}                <br/>${liquibase.lf}              </form>${liquibase.lf}              <xsl:call-template name=""footer""/>${liquibase.lf}            </body>${liquibase.lf}          </html>${liquibase.lf}        </xsl:template>${liquibase.lf}        <!-- mainBody template begins here. It calls other templates which can call other templates. Position of templates do not matter. -->${liquibase.lf}        <xsl:template name=""mainBody"">${liquibase.lf}          <!--${liquibase.lf}to debug, or see values of previously created, the uncomment the following line to see value of $docStatus rendered on form. -->${liquibase.lf}          <!-- $docStatus=<xsl:value-of select=""$docStatus"" />${liquibase.lf}-->${liquibase.lf}          <!-- rest of this all is within the form table -->${liquibase.lf}          <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" class=""bord-r-t"" width=""80%"" xmlns="""">${liquibase.lf}            <tr>${liquibase.lf}              <td align=""left"" border=""3"" class=""thnormal"" colspan=""1"">${liquibase.lf}                <br/>${liquibase.lf}                <h3>${liquibase.lf}                  Indiana University${liquibase.lf}                  <br/>${liquibase.lf}                  EDL EDoclite Example${liquibase.lf}                </h3>${liquibase.lf}                <br/>${liquibase.lf}              </td>${liquibase.lf}              <td align=""center"" border=""3"" class=""thnormal"" colspan=""2"">${liquibase.lf}                <br/>${liquibase.lf}                <h2>eDocLite Example 1 Form</h2>${liquibase.lf}              </td>${liquibase.lf}            </tr>${liquibase.lf}            <tr>${liquibase.lf}              <td class=""headercell5"" colspan=""100%"">${liquibase.lf}                <b>User Information</b>${liquibase.lf}              </td>${liquibase.lf}            </tr>${liquibase.lf}            <tr>${liquibase.lf}              <!-- IU usually autofills initiator name from Authentication system, and makes it readOnly. See other examples for this type of behavior. -->${liquibase.lf}              <td class=""thnormal"">${liquibase.lf}                <xsl:call-template name=""widget_render"">${liquibase.lf}                  <xsl:with-param name=""fieldName"" select=""'userName'""/>${liquibase.lf}                  <xsl:with-param name=""renderCmd"" select=""'title'""/>${liquibase.lf}                </xsl:call-template>${liquibase.lf}                <font color=""#ff0000"">*</font>${liquibase.lf}              </td>${liquibase.lf}              <td class=""datacell"">${liquibase.lf}                <xsl:call-template name=""widget_render"">${liquibase.lf}                  <xsl:with-param name=""fieldName"" select=""'userName'""/>${liquibase.lf}                  <xsl:with-param name=""renderCmd"" select=""'input'""/>${liquibase.lf}                  <xsl:with-param name=""readOnly"" select=""$isPastInitiated""/>${liquibase.lf}                </xsl:call-template>${liquibase.lf}              </td>${liquibase.lf}            </tr>${liquibase.lf}            <tr>${liquibase.lf}              <td class=""headercell5"" colspan=""100%"">${liquibase.lf}                <b>Other Information</b>${liquibase.lf}              </td>${liquibase.lf}            </tr>${liquibase.lf}            <tr>${liquibase.lf}              <td class=""thnormal"">${liquibase.lf}                <xsl:call-template name=""widget_render"">${liquibase.lf}                  <xsl:with-param name=""fieldName"" select=""'rqstDate'""/>${liquibase.lf}                  <xsl:with-param name=""renderCmd"" select=""'title'""/>${liquibase.lf}                </xsl:call-template>${liquibase.lf}                <font color=""#ff0000"">*</font>${liquibase.lf}              </td>${liquibase.lf}              <td class=""datacell"">${liquibase.lf}                <xsl:call-template name=""widget_render"">${liquibase.lf}                  <xsl:with-param name=""fieldName"" select=""'rqstDate'""/>${liquibase.lf}                  <xsl:with-param name=""renderCmd"" select=""'input'""/>${liquibase.lf}                  <xsl:with-param name=""readOnly"" select=""$isPastInitiated""/>${liquibase.lf}                </xsl:call-template>${liquibase.lf}              </td>${liquibase.lf}            </tr>${liquibase.lf}            <tr>${liquibase.lf}              <td class=""thnormal"">${liquibase.lf}                <xsl:call-template name=""widget_render"">${liquibase.lf}                  <xsl:with-param name=""fieldName"" select=""'campus'""/>${liquibase.lf}                  <xsl:with-param name=""renderCmd"" select=""'title'""/>${liquibase.lf}                </xsl:call-template>${liquibase.lf}                <font color=""#ff0000"">*</font>${liquibase.lf}              </td>${liquibase.lf}              <td class=""datacell"">${liquibase.lf}                <xsl:call-template name=""widget_render"">${liquibase.lf}                  <xsl:with-param name=""fieldName"" select=""'campus'""/>${liquibase.lf}                  <xsl:with-param name=""renderCmd"" select=""'input'""/>${liquibase.lf}                  <xsl:with-param name=""readOnly"" select=""$isPastInitiated""/>${liquibase.lf}                </xsl:call-template>${liquibase.lf}              </td>${liquibase.lf}            </tr>${liquibase.lf}            <tr>${liquibase.lf}              <td class=""thnormal"">${liquibase.lf}                <xsl:call-template name=""widget_render"">${liquibase.lf}                  <xsl:with-param name=""fieldName"" select=""'description'""/>${liquibase.lf}                  <xsl:with-param name=""renderCmd"" select=""'title'""/>${liquibase.lf}                </xsl:call-template>${liquibase.lf}              </td>${liquibase.lf}              <td class=""datacell"">${liquibase.lf}                <xsl:call-template name=""widget_render"">${liquibase.lf}                  <xsl:with-param name=""fieldName"" select=""'description'""/>${liquibase.lf}                  <xsl:with-param name=""renderCmd"" select=""'input'""/>${liquibase.lf}                  <xsl:with-param name=""readOnly"" select=""$isPastInitiated""/>${liquibase.lf}                </xsl:call-template>${liquibase.lf}              </td>${liquibase.lf}            </tr>${liquibase.lf}            <tr>${liquibase.lf}              <td class=""thnormal"" colspan=""2"">${liquibase.lf}                <b>(Check all that apply)</b>${liquibase.lf}              </td>${liquibase.lf}            </tr>${liquibase.lf}            <tr>${liquibase.lf}              <td class=""datacell"" colspan=""2"">${liquibase.lf}                <xsl:call-template name=""widget_render"">${liquibase.lf}                  <xsl:with-param name=""fieldName"" select=""'fundedBy'""/>${liquibase.lf}                  <xsl:with-param name=""renderCmd"" select=""'input'""/>${liquibase.lf}                  <xsl:with-param name=""readOnly"" select=""$isPastInitiated""/>${liquibase.lf}                </xsl:call-template>${liquibase.lf}                <br/>${liquibase.lf}                <xsl:call-template name=""widget_render"">${liquibase.lf}                  <xsl:with-param name=""fieldName"" select=""'researchHumans'""/>${liquibase.lf}                  <xsl:with-param name=""renderCmd"" select=""'input'""/>${liquibase.lf}                  <xsl:with-param name=""readOnly"" select=""$isPastInitiated""/>${liquibase.lf}                </xsl:call-template>${liquibase.lf}                <br/>${liquibase.lf}              </td>${liquibase.lf}            </tr>${liquibase.lf}            <tr>${liquibase.lf}              <td class=""headercell1"" colspan=""100%"">${liquibase.lf}                <b>Supporting Materials</b>${liquibase.lf}              </td>${liquibase.lf}            </tr>${liquibase.lf}            <tr>${liquibase.lf}              <td class=""thnormal"" colspan=""100%"">Use the Create Note box below to attach supporting materials to your request. Notes may be added with or without attachments. Click the red 'save' button on the right.</td>${liquibase.lf}            </tr>${liquibase.lf}          </table>${liquibase.lf}          <br xmlns=""""/>${liquibase.lf}        </xsl:template>${liquibase.lf}        <xsl:template name=""nbsp"">${liquibase.lf}          <xsl:text disable-output-escaping=""yes"">&amp;nbsp;</xsl:text>${liquibase.lf}        </xsl:template>${liquibase.lf}      </xsl:stylesheet>${liquibase.lf}","0","2","6166CBA1BC08644DE0404F8189D86C09"
"2020","widgets","<xsl:stylesheet xmlns:my-class=""xalan://org.kuali.rice.edl.framework.util.EDLFunctions"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" version=""1.0"">${liquibase.lf}				<xsl:output method=""html"" version=""4.01""/>${liquibase.lf}				<xsl:variable name=""globalReadOnly"" select=""/documentContent/documentState/editable != 'true'""/>${liquibase.lf}				<!-- determined by an appconstant -->${liquibase.lf}				<xsl:variable name=""showAttachments"" select=""/documentContent/documentState/showAttachments""/>${liquibase.lf}				<xsl:strip-space elements=""*""/>${liquibase.lf}${liquibase.lf}				<xsl:template name=""widget_render"">${liquibase.lf}					<xsl:param name=""fieldName""/>${liquibase.lf}					<xsl:param name=""renderCmd""/>${liquibase.lf}					<xsl:param name=""align""/>${liquibase.lf}					<xsl:param name=""readOnly""/>${liquibase.lf}					<xsl:param name=""customFunction""/>${liquibase.lf}					<xsl:param name=""default""/>${liquibase.lf}					<xsl:for-each select=""//fieldDef[@name=$fieldName]"">${liquibase.lf}						<xsl:choose>${liquibase.lf}							<xsl:when test=""position() != 1"">${liquibase.lf}								<h4>${liquibase.lf}									<font color=""#FF0000""> fieldDef Name:  <xsl:value-of select=""$fieldName""/> is  duplicated ! </font>${liquibase.lf}								</h4>${liquibase.lf}							</xsl:when>${liquibase.lf}							<xsl:otherwise>${liquibase.lf}								<xsl:variable name=""input_type"" select=""display/type""/>${liquibase.lf}								<xsl:variable name=""render"">${liquibase.lf}									<xsl:choose>${liquibase.lf}										<xsl:when test=""$renderCmd"">${liquibase.lf}											<xsl:value-of select=""$renderCmd""/>${liquibase.lf}										</xsl:when>${liquibase.lf}										<xsl:otherwise>${liquibase.lf}											<xsl:value-of select=""'all'""/>${liquibase.lf}										</xsl:otherwise>${liquibase.lf}									</xsl:choose>${liquibase.lf}								</xsl:variable>${liquibase.lf}								<xsl:variable name=""vAlign"">${liquibase.lf}									<xsl:choose>${liquibase.lf}										<xsl:when test=""$align"">${liquibase.lf}											<xsl:value-of select=""$align""/>${liquibase.lf}										</xsl:when>${liquibase.lf}										<xsl:otherwise>${liquibase.lf}											<xsl:value-of select=""'horizontal'""/>${liquibase.lf}										</xsl:otherwise>${liquibase.lf}									</xsl:choose>${liquibase.lf}								</xsl:variable>${liquibase.lf}								<xsl:comment>* For JavaScript validation</xsl:comment>${liquibase.lf}								<xsl:variable name=""fieldDisplayName"">${liquibase.lf}									<xsl:choose>${liquibase.lf}										<xsl:when test=""@title"">${liquibase.lf}											<xsl:value-of select=""@title""/>${liquibase.lf}										</xsl:when>${liquibase.lf}										<xsl:otherwise>${liquibase.lf}											<xsl:value-of select=""@name""/>${liquibase.lf}										</xsl:otherwise>${liquibase.lf}									</xsl:choose>${liquibase.lf}								</xsl:variable>${liquibase.lf}								<xsl:variable name=""regex"" select=""my-class:escapeJavascript(validation/regex)""/>${liquibase.lf}								<xsl:variable name=""customValidator"" select=""validation/customValidator""/>${liquibase.lf}								<xsl:variable name=""validation_required"" select=""validation/@required = 'true'""/>${liquibase.lf}								<xsl:variable name=""message"">${liquibase.lf}									<!-- <xsl:if test=""//edlContent/data/version[@current='true']/field[@name=current()/@name]""> -->${liquibase.lf}									<xsl:choose>${liquibase.lf}										<xsl:when test=""//edlContent/data/version[@current='true']/field[@name=current()/@name]/errorMessage"">${liquibase.lf}											<xsl:value-of select=""//edlContent/data/version[@current='true']/field[@name=current()/@name]/errorMessage""/>${liquibase.lf}										</xsl:when>${liquibase.lf}										<xsl:when test=""//documentState/fieldError[@key=current()/@name]"">${liquibase.lf}											<xsl:value-of select=""//documentState/fieldError[@key=current()/@name]""/>${liquibase.lf}										</xsl:when>${liquibase.lf}										<xsl:when test=""validation/message"">${liquibase.lf}											<xsl:value-of select=""validation/message""/>${liquibase.lf}										</xsl:when>${liquibase.lf}										<xsl:when test=""validation/regex"">${liquibase.lf}											<xsl:value-of select=""$fieldDisplayName""/> (<xsl:value-of select=""@name""/>) <xsl:text> does not match '</xsl:text> <xsl:value-of select=""$regex""/> <xsl:text>'</xsl:text>${liquibase.lf}										</xsl:when>${liquibase.lf}										<xsl:otherwise>${liquibase.lf}									    <xsl:value-of select=""//edlContent/data/version[@current='true']/field[@name]""/>${liquibase.lf}											<xsl:comment>* Dropped Through and Hit Otherwise</xsl:comment>								${liquibase.lf}										</xsl:otherwise>${liquibase.lf}									</xsl:choose>${liquibase.lf}									<!-- </xsl:if> -->${liquibase.lf}								</xsl:variable>${liquibase.lf}								<xsl:variable name=""custommessage"">${liquibase.lf}									<xsl:choose>${liquibase.lf}										<xsl:when test=""//edlContent/data/version[@current='true']/field[@name=current()/@name]/errorMessage"">${liquibase.lf}											<xsl:value-of select=""//edlContent/data/version[@current='true']/field[@name=current()/@name]/errorMessage""/>${liquibase.lf}										</xsl:when>${liquibase.lf}										<xsl:otherwise>NONE</xsl:otherwise>${liquibase.lf}									</xsl:choose>${liquibase.lf}								</xsl:variable>${liquibase.lf}								${liquibase.lf}								<xsl:comment>* custom message: <xsl:value-of select=""$custommessage""/>${liquibase.lf}</xsl:comment>${liquibase.lf}								<xsl:comment>* validation/message: <xsl:value-of select=""validation/message""/>${liquibase.lf}</xsl:comment>${liquibase.lf}								<xsl:comment>* message: <xsl:value-of select=""$message""/>${liquibase.lf}</xsl:comment>${liquibase.lf}								<xsl:variable name=""hasFieldError"" select=""//documentState/fieldError[@key=current()/@name]""/>${liquibase.lf}								<xsl:variable name=""invalid"" select=""//edlContent/data/version[@current='true']/field[@name=current()/@name]/@invalid""/>${liquibase.lf}								<!--${liquibase.lf}									determine value to display: use the value specified in the current version	if it exists, otherwise use the 'default' ${liquibase.lf}									value defined in the field or if specified use data from userSession${liquibase.lf}								-->${liquibase.lf}								<xsl:variable name=""userValue"" select=""//edlContent/data/version[@current='true']/field[@name=current()/@name]/value""/>${liquibase.lf}								<xsl:variable name=""hasUserValue"" select=""boolean($userValue)""/>${liquibase.lf}								<xsl:variable name=""value"">${liquibase.lf}									<xsl:choose>${liquibase.lf}										<xsl:when test=""$hasUserValue"">${liquibase.lf}											<xsl:value-of select=""$userValue""/>${liquibase.lf}										</xsl:when>${liquibase.lf}										<xsl:when test=""$default"">${liquibase.lf}											<xsl:value-of select=""$default""/>${liquibase.lf}										</xsl:when>${liquibase.lf}										<xsl:otherwise>${liquibase.lf}											<xsl:value-of select=""value""/>${liquibase.lf}										</xsl:otherwise>${liquibase.lf}									</xsl:choose>${liquibase.lf}								</xsl:variable>${liquibase.lf}								<!-- message row -->${liquibase.lf}								<xsl:variable name=""type"">${liquibase.lf}									<xsl:choose>${liquibase.lf}										<xsl:when test=""($invalid and $validation_required) or $hasFieldError"">error</xsl:when>${liquibase.lf}										<xsl:when test=""$invalid and not($validation_required)"">warning</xsl:when>${liquibase.lf}										<xsl:otherwise>empty</xsl:otherwise>${liquibase.lf}									</xsl:choose>${liquibase.lf}								</xsl:variable>${liquibase.lf}								<xsl:comment>* type: <xsl:value-of select=""$type""/>${liquibase.lf}</xsl:comment>${liquibase.lf}								<!-- ${liquibase.lf}									<tr class=""{$type}_messageRow"" id=""{@name}_messageRow"">${liquibase.lf}										<td class=""{$type}_messageHeaderCell"" id=""{@name}_messageHeaderCell"">${liquibase.lf}											<xsl:value-of select=""$type""/>${liquibase.lf}										</td>${liquibase.lf}										<td class=""{$type}_messageDataCell"" id=""{@name}_messageDataCell"">${liquibase.lf}											<span id=""{@name}_message"">${liquibase.lf}												<xsl:value-of select=""$message""/>${liquibase.lf}											</span>${liquibase.lf}										</td>${liquibase.lf}									</tr>${liquibase.lf}								-->${liquibase.lf}                                ${liquibase.lf}                                ${liquibase.lf}								<xsl:choose>${liquibase.lf}									<xsl:when test=""$input_type='text'"">${liquibase.lf}										<xsl:comment>* input_type 'text'</xsl:comment>						${liquibase.lf}										<xsl:call-template name=""textbox_render"">${liquibase.lf}											<xsl:with-param name=""fieldName"" select=""$fieldName""/>${liquibase.lf}											<xsl:with-param name=""renderCmd"" select=""$render""/>${liquibase.lf}											<xsl:with-param name=""align"" select=""$vAlign""/>${liquibase.lf}											<xsl:with-param name=""hasUserValue"" select=""$hasUserValue""/>${liquibase.lf}											<xsl:with-param name=""value"" select=""$value""/>${liquibase.lf}											<xsl:with-param name=""invalid"" select=""$invalid""/>${liquibase.lf}											<xsl:with-param name=""regex"" select=""$regex""/>${liquibase.lf}											<xsl:with-param name=""customValidator"" select=""$customValidator""/>${liquibase.lf}											<xsl:with-param name=""message"" select=""$message""/>${liquibase.lf}											<xsl:with-param name=""validation_required"" select=""$validation_required""/>${liquibase.lf}											<xsl:with-param name=""readOnly"">${liquibase.lf}                                                <xsl:choose>${liquibase.lf}                                                    <xsl:when test=""//fieldDef[@name=$fieldName]/lookup/lookupReadOnly = 'true'"">true</xsl:when>${liquibase.lf}                                                    <xsl:otherwise>${liquibase.lf}<xsl:value-of select=""$readOnly""/>${liquibase.lf}</xsl:otherwise>${liquibase.lf}                                                </xsl:choose>${liquibase.lf}                                            </xsl:with-param>${liquibase.lf}											<xsl:with-param name=""customFunction"" select=""$customFunction""/>${liquibase.lf}										</xsl:call-template>${liquibase.lf}									</xsl:when>${liquibase.lf}									<xsl:when test=""$input_type='password'"">${liquibase.lf}										<xsl:call-template name=""textbox_render"">${liquibase.lf}											<xsl:with-param name=""fieldName"" select=""$fieldName""/>${liquibase.lf}											<xsl:with-param name=""renderCmd"" select=""$render""/>${liquibase.lf}											<xsl:with-param name=""align"" select=""$vAlign""/>${liquibase.lf}											<xsl:with-param name=""hasUserValue"" select=""$hasUserValue""/>${liquibase.lf}											<xsl:with-param name=""value"" select=""$value""/>${liquibase.lf}											<xsl:with-param name=""invalid"" select=""$invalid""/>${liquibase.lf}											<xsl:with-param name=""regex"" select=""$regex""/>${liquibase.lf}											<xsl:with-param name=""customValidator"" select=""$customValidator""/>${liquibase.lf}											<xsl:with-param name=""message"" select=""$message""/>${liquibase.lf}											<xsl:with-param name=""validation_required"" select=""$validation_required""/>${liquibase.lf}											<xsl:with-param name=""customFunction"" select=""$customFunction""/>${liquibase.lf}										</xsl:call-template>${liquibase.lf}									</xsl:when>${liquibase.lf}									<xsl:when test=""$input_type='radio'"">${liquibase.lf}										<xsl:call-template name=""radio_render"">${liquibase.lf}											<xsl:with-param name=""fieldName"" select=""$fieldName""/>${liquibase.lf}											<xsl:with-param name=""renderCmd"" select=""$render""/>${liquibase.lf}											<xsl:with-param name=""align"" select=""$vAlign""/>${liquibase.lf}											<xsl:with-param name=""hasUserValue"" select=""$hasUserValue""/>${liquibase.lf}											<xsl:with-param name=""value"" select=""$value""/>${liquibase.lf}											<xsl:with-param name=""invalid"" select=""$invalid""/>${liquibase.lf}											<xsl:with-param name=""regex"" select=""$regex""/>${liquibase.lf}											<xsl:with-param name=""customValidator"" select=""$customValidator""/>${liquibase.lf}											<xsl:with-param name=""message"" select=""$message""/>${liquibase.lf}											<xsl:with-param name=""validation_required"" select=""$validation_required""/>${liquibase.lf}											<xsl:with-param name=""readOnly"" select=""$readOnly""/>${liquibase.lf}											<xsl:with-param name=""customFunction"" select=""$customFunction""/>${liquibase.lf}										</xsl:call-template>${liquibase.lf}									</xsl:when>${liquibase.lf}									<xsl:when test=""$input_type='checkbox'"">${liquibase.lf}										<xsl:call-template name=""checkbox_render"">${liquibase.lf}											<xsl:with-param name=""fieldName"" select=""$fieldName""/>${liquibase.lf}											<xsl:with-param name=""renderCmd"" select=""$render""/>${liquibase.lf}											<xsl:with-param name=""align"" select=""$vAlign""/>${liquibase.lf}											<xsl:with-param name=""hasUserValue"" select=""$hasUserValue""/>${liquibase.lf}											<xsl:with-param name=""value"" select=""$value""/>${liquibase.lf}											<xsl:with-param name=""invalid"" select=""$invalid""/>${liquibase.lf}											<xsl:with-param name=""regex"" select=""$regex""/>${liquibase.lf}											<xsl:with-param name=""customValidator"" select=""$customValidator""/>${liquibase.lf}											<xsl:with-param name=""message"" select=""$message""/>${liquibase.lf}											<xsl:with-param name=""validation_required"" select=""$validation_required""/>${liquibase.lf}											<xsl:with-param name=""readOnly"" select=""$readOnly""/>${liquibase.lf}											<xsl:with-param name=""customFunction"" select=""$customFunction""/>${liquibase.lf}										</xsl:call-template>${liquibase.lf}									</xsl:when>${liquibase.lf}									<xsl:when test=""$input_type='select'"">${liquibase.lf}										<xsl:call-template name=""select_input"">${liquibase.lf}											<xsl:with-param name=""fieldName"" select=""$fieldName""/>${liquibase.lf}											<xsl:with-param name=""renderCmd"" select=""$render""/>${liquibase.lf}											<xsl:with-param name=""align"" select=""$vAlign""/>${liquibase.lf}											<xsl:with-param name=""hasUserValue"" select=""$hasUserValue""/>${liquibase.lf}											<xsl:with-param name=""value"" select=""$value""/>${liquibase.lf}											<xsl:with-param name=""invalid"" select=""$invalid""/>${liquibase.lf}											<xsl:with-param name=""regex"" select=""$regex""/>${liquibase.lf}											<xsl:with-param name=""customValidator"" select=""$customValidator""/>${liquibase.lf}											<xsl:with-param name=""message"" select=""$message""/>${liquibase.lf}											<xsl:with-param name=""validation_required"" select=""$validation_required""/>${liquibase.lf}											<xsl:with-param name=""readOnly"" select=""$readOnly""/>${liquibase.lf}											<xsl:with-param name=""customFunction"" select=""$customFunction""/>${liquibase.lf}										</xsl:call-template>${liquibase.lf}									</xsl:when>${liquibase.lf}									<xsl:when test=""$input_type='select_refresh'"">${liquibase.lf}										<xsl:call-template name=""select_input"">${liquibase.lf}											<xsl:with-param name=""fieldName"" select=""$fieldName""/>${liquibase.lf}											<xsl:with-param name=""renderCmd"" select=""$render""/>${liquibase.lf}											<xsl:with-param name=""align"" select=""$vAlign""/>${liquibase.lf}											<xsl:with-param name=""hasUserValue"" select=""$hasUserValue""/>${liquibase.lf}											<xsl:with-param name=""value"" select=""$value""/>${liquibase.lf}											<xsl:with-param name=""invalid"" select=""$invalid""/>${liquibase.lf}											<xsl:with-param name=""regex"" select=""$regex""/>${liquibase.lf}											<xsl:with-param name=""customValidator"" select=""$customValidator""/>${liquibase.lf}											<xsl:with-param name=""message"" select=""$message""/>${liquibase.lf}											<xsl:with-param name=""validation_required"" select=""$validation_required""/>${liquibase.lf}											<xsl:with-param name=""readOnly"" select=""$readOnly""/>${liquibase.lf}											<xsl:with-param name=""refreshPage"" select=""'true'""/>${liquibase.lf}											<xsl:with-param name=""customFunction"" select=""$customFunction""/>${liquibase.lf}										</xsl:call-template>${liquibase.lf}									</xsl:when>${liquibase.lf}									<xsl:when test=""$input_type='textarea'"">${liquibase.lf}										<xsl:call-template name=""textarea_input"">${liquibase.lf}											<xsl:with-param name=""fieldName"" select=""$fieldName""/>${liquibase.lf}											<xsl:with-param name=""renderCmd"" select=""$renderCmd""/>${liquibase.lf}											<xsl:with-param name=""align"" select=""$align""/>${liquibase.lf}											<xsl:with-param name=""hasUserValue"" select=""$hasUserValue""/>${liquibase.lf}											<xsl:with-param name=""value"" select=""$value""/>${liquibase.lf}											<xsl:with-param name=""invalid"" select=""$invalid""/>${liquibase.lf}											<xsl:with-param name=""regex"" select=""$regex""/>${liquibase.lf}											<xsl:with-param name=""customValidator"" select=""$customValidator""/>${liquibase.lf}											<xsl:with-param name=""message"" select=""$message""/>${liquibase.lf}											<xsl:with-param name=""validation_required"" select=""$validation_required""/>${liquibase.lf}											<xsl:with-param name=""readOnly"" select=""$readOnly""/>${liquibase.lf}											<xsl:with-param name=""customFunction"" select=""$customFunction""/>${liquibase.lf}										</xsl:call-template>${liquibase.lf}									</xsl:when>${liquibase.lf}									<xsl:when test=""$input_type='button'"">${liquibase.lf}										<xsl:call-template name=""button_input"">${liquibase.lf}											<xsl:with-param name=""fieldName"" select=""$fieldName""/>${liquibase.lf}											<xsl:with-param name=""renderCmd"" select=""$renderCmd""/>${liquibase.lf}											<xsl:with-param name=""align"" select=""$align""/>${liquibase.lf}											<xsl:with-param name=""hasUserValue"" select=""$hasUserValue""/>${liquibase.lf}											<xsl:with-param name=""value"" select=""$value""/>${liquibase.lf}											<xsl:with-param name=""invalid"" select=""$invalid""/>${liquibase.lf}											<xsl:with-param name=""regex"" select=""$regex""/>${liquibase.lf}											<xsl:with-param name=""customValidator"" select=""$customValidator""/>${liquibase.lf}											<xsl:with-param name=""message"" select=""$message""/>${liquibase.lf}											<xsl:with-param name=""validation_required"" select=""$validation_required""/>${liquibase.lf}										</xsl:call-template>${liquibase.lf}									</xsl:when>${liquibase.lf}									<xsl:when test=""$input_type='submit button'"">${liquibase.lf}										<xsl:call-template name=""submitbutton_input"">${liquibase.lf}											<xsl:with-param name=""fieldName"" select=""$fieldName""/>${liquibase.lf}											<xsl:with-param name=""renderCmd"" select=""$renderCmd""/>${liquibase.lf}											<xsl:with-param name=""align"" select=""$align""/>${liquibase.lf}											<xsl:with-param name=""hasUserValue"" select=""$hasUserValue""/>${liquibase.lf}											<xsl:with-param name=""value"" select=""$value""/>${liquibase.lf}											<xsl:with-param name=""invalid"" select=""$invalid""/>${liquibase.lf}											<xsl:with-param name=""regex"" select=""$regex""/>${liquibase.lf}											<xsl:with-param name=""customValidator"" select=""$customValidator""/>${liquibase.lf}											<xsl:with-param name=""message"" select=""$message""/>${liquibase.lf}											<xsl:with-param name=""validation_required"" select=""$validation_required""/>${liquibase.lf}										</xsl:call-template>${liquibase.lf}									</xsl:when>${liquibase.lf}									<xsl:when test=""$input_type='hidden'"">${liquibase.lf}										<xsl:call-template name=""hidden_input"">${liquibase.lf}											<xsl:with-param name=""fieldName"" select=""$fieldName""/>${liquibase.lf}											<xsl:with-param name=""value"" select=""$value""/>${liquibase.lf}										</xsl:call-template>${liquibase.lf}									</xsl:when>${liquibase.lf}								</xsl:choose>${liquibase.lf}								<xsl:if test=""$renderCmd='all' or $renderCmd='input'"">${liquibase.lf}                                    <xsl:call-template name=""lookup"">${liquibase.lf}                                      <xsl:with-param name=""fieldName"" select=""$fieldName""/>${liquibase.lf}                                      <xsl:with-param name=""readOnly"" select=""$readOnly""/>${liquibase.lf}                                    </xsl:call-template>${liquibase.lf}									<span class=""{$type}Message"" id=""{@name}_messageHeaderCell"">${liquibase.lf}										<xsl:text> </xsl:text>${liquibase.lf}<xsl:value-of select=""$type""/>${liquibase.lf}<xsl:text>: </xsl:text>${liquibase.lf}									</span>${liquibase.lf}									<span class=""{$type}Message"" id=""{@name}_message"">${liquibase.lf}										<xsl:value-of select=""$message""/>${liquibase.lf}									</span>${liquibase.lf}									<xsl:if test=""validation/regex or validation/customValidator or validation[@required='true']"">${liquibase.lf}										<xsl:if test=""not(validation/customValidator)"">${liquibase.lf}											<script type=""text/javascript"">${liquibase.lf}												// register field for regex checking${liquibase.lf}												register(""<xsl:value-of select=""@name""/>"",""<xsl:value-of select=""$fieldDisplayName""/>"",""<xsl:value-of select=""$regex""/>"",""<xsl:value-of select=""$message""/>"",""<xsl:value-of select=""$validation_required""/>"");${liquibase.lf}											</script>${liquibase.lf}										</xsl:if>${liquibase.lf}										<xsl:if test=""validation/customValidator"">${liquibase.lf}											<script type=""text/javascript"">${liquibase.lf}												// register field for custom field checking${liquibase.lf}												register_custom(""<xsl:value-of select=""@name""/>"",""<xsl:value-of select=""$fieldDisplayName""/>"",""<xsl:value-of select=""$message""/>"", ""<xsl:value-of select=""$validation_required""/>"", <xsl:value-of select=""$customValidator""/>);${liquibase.lf}											</script>${liquibase.lf}										</xsl:if>${liquibase.lf}									</xsl:if>${liquibase.lf}								</xsl:if>${liquibase.lf}							</xsl:otherwise>${liquibase.lf}						</xsl:choose>${liquibase.lf}					</xsl:for-each>${liquibase.lf}				</xsl:template>${liquibase.lf}${liquibase.lf}				<xsl:template name=""textbox_render"">${liquibase.lf}					<xsl:param name=""fieldName""/>${liquibase.lf}					<xsl:param name=""renderCmd""/>${liquibase.lf}					<xsl:param name=""align""/>${liquibase.lf}					<xsl:param name=""hasUserValue""/>				${liquibase.lf}					<xsl:param name=""value""/>${liquibase.lf}					<xsl:param name=""regex""/>${liquibase.lf}					<xsl:param name=""message""/>${liquibase.lf}					<xsl:param name=""validation_required""/>${liquibase.lf}					<xsl:param name=""readOnly""/>${liquibase.lf}					<xsl:param name=""customFunction""/>${liquibase.lf}					<xsl:if test=""$renderCmd='all' or  $renderCmd='title'"">${liquibase.lf}						<xsl:value-of select=""current()/@title""/>${liquibase.lf}					</xsl:if>${liquibase.lf}					<xsl:if test=""$renderCmd='all'"">${liquibase.lf}						<xsl:if test=""$align ='horizontal'"">${liquibase.lf}							<xsl:text>          </xsl:text>${liquibase.lf}						</xsl:if>${liquibase.lf}						<xsl:if test=""$align='vertical'"">${liquibase.lf}							<br/>${liquibase.lf}						</xsl:if>${liquibase.lf}					</xsl:if>${liquibase.lf}					<xsl:if test=""$renderCmd='all' or $renderCmd='input'"">${liquibase.lf}						<xsl:if test=""$globalReadOnly = 'true' or $readOnly = 'true'"">${liquibase.lf}							<xsl:call-template name=""hidden_input"">${liquibase.lf}								<xsl:with-param name=""fieldName"" select=""$fieldName""/>${liquibase.lf}								<xsl:with-param name=""value"" select=""$value""/>${liquibase.lf}							</xsl:call-template>${liquibase.lf}						</xsl:if>${liquibase.lf}						<input value=""{$value}"">${liquibase.lf}							<xsl:if test=""$customFunction"">${liquibase.lf}							  <xsl:variable name=""customFunction_val"" select=""$customFunction""/>${liquibase.lf}							  <xsl:attribute name=""onkeyup"">${liquibase.lf}							    <xsl:value-of select=""$customFunction""/>${liquibase.lf}							  </xsl:attribute>${liquibase.lf}							</xsl:if>${liquibase.lf}							<xsl:if test=""$globalReadOnly = 'true' or $readOnly = 'true'"">${liquibase.lf}								<xsl:attribute name=""disabled"">${liquibase.lf}								  disabled${liquibase.lf}								</xsl:attribute>${liquibase.lf}							</xsl:if>${liquibase.lf}							<xsl:attribute name=""type"">${liquibase.lf}<xsl:value-of select=""current()/display/type""/>${liquibase.lf}</xsl:attribute>${liquibase.lf}							<xsl:attribute name=""name"">${liquibase.lf}<xsl:value-of select=""$fieldName""/>${liquibase.lf}</xsl:attribute>${liquibase.lf}							<xsl:attribute name=""onkeydown"">return replaceEnter(event)</xsl:attribute>${liquibase.lf}							<xsl:for-each select=""current()/display/meta"">${liquibase.lf}								<xsl:variable name=""attrName"">${liquibase.lf}									<xsl:value-of select=""name""/>${liquibase.lf}								</xsl:variable>${liquibase.lf}								<xsl:variable name=""attrValue"">${liquibase.lf}									<xsl:value-of select=""value""/>${liquibase.lf}								</xsl:variable>${liquibase.lf}								<xsl:attribute name=""{$attrName}"">${liquibase.lf}<xsl:value-of select=""$attrValue""/>${liquibase.lf}</xsl:attribute>${liquibase.lf}							</xsl:for-each>${liquibase.lf}						</input>${liquibase.lf}					</xsl:if>${liquibase.lf}				</xsl:template>${liquibase.lf}				${liquibase.lf}				<xsl:template name=""radio_render"">${liquibase.lf}					<xsl:param name=""fieldName""/>${liquibase.lf}					<xsl:param name=""renderCmd""/>${liquibase.lf}					<xsl:param name=""align""/>${liquibase.lf}					<xsl:param name=""hasUserValue""/>${liquibase.lf}					<xsl:param name=""value""/>${liquibase.lf}					<xsl:param name=""readOnly""/>${liquibase.lf}					<xsl:param name=""customFunction""/>${liquibase.lf}					<xsl:if test=""$renderCmd='all' or  $renderCmd='title'"">${liquibase.lf}						<xsl:value-of select=""current()/@title""/>${liquibase.lf}					</xsl:if>${liquibase.lf}					<xsl:if test=""$renderCmd='all'"">${liquibase.lf}						<xsl:if test=""$align ='horizontal'"">${liquibase.lf}							<xsl:text>            </xsl:text>${liquibase.lf}						</xsl:if>${liquibase.lf}						<xsl:if test=""$align='vertical'"">${liquibase.lf}							<br/>${liquibase.lf}						</xsl:if>${liquibase.lf}					</xsl:if>${liquibase.lf}					<xsl:if test=""$globalReadOnly = 'true' or $readOnly = 'true'"">${liquibase.lf}						<xsl:call-template name=""hidden_input"">			${liquibase.lf}							<xsl:with-param name=""fieldName"" select=""$fieldName""/>${liquibase.lf}							<xsl:with-param name=""value"" select=""$value""/>${liquibase.lf}						</xsl:call-template>${liquibase.lf}					</xsl:if>${liquibase.lf}					<xsl:if test=""$renderCmd='all' or $renderCmd='input'"">${liquibase.lf}						<xsl:for-each select=""current()/display/values"">${liquibase.lf}							<xsl:variable name=""title"">${liquibase.lf}								<xsl:choose>${liquibase.lf}									<xsl:when test=""@title"">${liquibase.lf}										<xsl:value-of select=""@title""/>${liquibase.lf}									</xsl:when>${liquibase.lf}									<xsl:otherwise>${liquibase.lf}										<xsl:value-of select=""@name""/>${liquibase.lf}									</xsl:otherwise>${liquibase.lf}								</xsl:choose>${liquibase.lf}							</xsl:variable>${liquibase.lf}							<xsl:variable name=""optionName"">${liquibase.lf}								<xsl:value-of select=""../../@name""/>${liquibase.lf}							</xsl:variable>${liquibase.lf}							<input name=""{$optionName}"" title=""{$title}"" type=""{../type}"" value=""{.}"">${liquibase.lf}							<xsl:if test=""$customFunction"">${liquibase.lf}							  <xsl:variable name=""customFunction_val"" select=""$customFunction""/>${liquibase.lf}							  <xsl:attribute name=""onClick"">${liquibase.lf}							    <xsl:value-of select=""$customFunction""/>${liquibase.lf}							  </xsl:attribute>${liquibase.lf}							</xsl:if>${liquibase.lf}								<xsl:if test=""$globalReadOnly = 'true' or $readOnly = 'true'"">${liquibase.lf}									<xsl:attribute name=""disabled"">disabled</xsl:attribute>${liquibase.lf}								</xsl:if>${liquibase.lf}								<xsl:choose>${liquibase.lf}									<xsl:when test=""$hasUserValue"">${liquibase.lf}										<xsl:if test=""//edlContent/data/version[@current='true']/field[@name=current()/../../@name and value=current()]"">${liquibase.lf}											<xsl:attribute name=""checked"">checked</xsl:attribute>${liquibase.lf}										</xsl:if>${liquibase.lf}									</xsl:when>${liquibase.lf}									<xsl:otherwise>${liquibase.lf}										<!-- use the default if no user values are specified -->${liquibase.lf}										<xsl:if test="". = ../../value"">${liquibase.lf}											<xsl:attribute name=""checked"">checked</xsl:attribute>${liquibase.lf}										</xsl:if>${liquibase.lf}									</xsl:otherwise>${liquibase.lf}								</xsl:choose>${liquibase.lf}							</input>${liquibase.lf}							<xsl:value-of select=""$title""/>${liquibase.lf}							<xsl:if test=""$align ='horizontal'"">${liquibase.lf}								<xsl:text>           </xsl:text>${liquibase.lf}							</xsl:if>${liquibase.lf}							<xsl:if test=""$align='vertical'"">${liquibase.lf}								<br/>${liquibase.lf}							</xsl:if>${liquibase.lf}						</xsl:for-each>${liquibase.lf}					</xsl:if>${liquibase.lf}				</xsl:template>${liquibase.lf}${liquibase.lf}				<xsl:template name=""checkbox_render"">${liquibase.lf}					<xsl:param name=""fieldName""/>${liquibase.lf}					<xsl:param name=""renderCmd""/>${liquibase.lf}					<xsl:param name=""align""/>${liquibase.lf}					<xsl:param name=""hasUserValue""/>${liquibase.lf}					<xsl:param name=""value""/>${liquibase.lf}					<xsl:param name=""readOnly""/>${liquibase.lf}					<xsl:param name=""customFunction""/>${liquibase.lf}					<xsl:if test=""$renderCmd='all' or  $renderCmd='title'"">${liquibase.lf}						<xsl:value-of select=""current()/@title""/>${liquibase.lf}					</xsl:if>${liquibase.lf}					<xsl:if test=""$renderCmd='all'"">${liquibase.lf}						<xsl:if test=""$align ='horizontal'"">${liquibase.lf}							<xsl:text>          </xsl:text>${liquibase.lf}						</xsl:if>${liquibase.lf}						<xsl:if test=""$align='vertical'"">${liquibase.lf}							<br/>${liquibase.lf}						</xsl:if>${liquibase.lf}					</xsl:if>${liquibase.lf}					<!-- ${liquibase.lf}						<xsl:if test=""$globalReadOnly = 'true'  or $readOnly = 'true'"">${liquibase.lf}							<xsl:call-template name=""hidden_input"">			${liquibase.lf}								<xsl:with-param name=""fieldName"" select=""$fieldName""/>${liquibase.lf}								<xsl:with-param name=""value"" select=""$value""/>${liquibase.lf}							</xsl:call-template>${liquibase.lf}						</xsl:if>${liquibase.lf}					-->${liquibase.lf}					<xsl:if test=""$renderCmd='all' or $renderCmd='input'"">${liquibase.lf}						<xsl:for-each select=""current()/display/values"">${liquibase.lf}							<xsl:variable name=""title"">${liquibase.lf}								<xsl:choose>${liquibase.lf}									<xsl:when test=""@title"">${liquibase.lf}										<xsl:value-of select=""@title""/>${liquibase.lf}									</xsl:when>${liquibase.lf}									<xsl:otherwise>${liquibase.lf}										<xsl:value-of select=""@name""/>${liquibase.lf}									</xsl:otherwise>${liquibase.lf}								</xsl:choose>${liquibase.lf}							</xsl:variable>${liquibase.lf}							<xsl:variable name=""optionName"">${liquibase.lf}								<xsl:value-of select=""../../@name""/>${liquibase.lf}							</xsl:variable>${liquibase.lf}							<xsl:variable name=""checked"">${liquibase.lf}								<xsl:choose>${liquibase.lf}									<xsl:when test=""$hasUserValue"">${liquibase.lf}<xsl:value-of select=""//edlContent/data/version[@current='true']/field[@name=current()/../../@name and value=current()] = .""/>${liquibase.lf}</xsl:when>${liquibase.lf}									<!-- use the default if no user values are specified -->${liquibase.lf}									<xsl:when test="". = ../../value"">true</xsl:when>${liquibase.lf}									<xsl:otherwise>false</xsl:otherwise>${liquibase.lf}								</xsl:choose>${liquibase.lf}							</xsl:variable>${liquibase.lf}							<xsl:if test=""($globalReadOnly = 'true'  or $readOnly = 'true') and $checked = 'true' "">${liquibase.lf}								<xsl:call-template name=""hidden_input"">			${liquibase.lf}									<xsl:with-param name=""fieldName"" select=""$fieldName""/>${liquibase.lf}									<xsl:with-param name=""value"" select="".""/>${liquibase.lf}								</xsl:call-template>${liquibase.lf}							</xsl:if>${liquibase.lf}		  				<input name=""{$optionName}"" type=""{../type}"" value=""{.}"">${liquibase.lf}							<xsl:if test=""$customFunction"">${liquibase.lf}							  <xsl:variable name=""customFunction_val"" select=""$customFunction""/>${liquibase.lf}							  <xsl:attribute name=""onClick"">${liquibase.lf}							    <xsl:value-of select=""$customFunction""/>${liquibase.lf}							  </xsl:attribute>${liquibase.lf}							</xsl:if>${liquibase.lf}								<xsl:if test=""$globalReadOnly = 'true'  or $readOnly = 'true'"">${liquibase.lf}									<xsl:attribute name=""disabled"">disabled</xsl:attribute>${liquibase.lf}								</xsl:if>${liquibase.lf}								<xsl:if test=""$checked = 'true'"">${liquibase.lf}									<xsl:attribute name=""checked"">checked</xsl:attribute>${liquibase.lf}								</xsl:if>${liquibase.lf}							</input>${liquibase.lf}							<xsl:value-of select=""$title""/>${liquibase.lf}							<xsl:if test=""$align ='horizontal'"">${liquibase.lf}								<xsl:text>           </xsl:text>${liquibase.lf}							</xsl:if>${liquibase.lf}							<xsl:if test=""$align='vertical'"">${liquibase.lf}								<br/>${liquibase.lf}							</xsl:if>${liquibase.lf}						</xsl:for-each>${liquibase.lf}					</xsl:if>${liquibase.lf}				</xsl:template>${liquibase.lf}				${liquibase.lf}				<xsl:template name=""select_input"">${liquibase.lf}					<xsl:param name=""fieldName""/>${liquibase.lf}					<xsl:param name=""renderCmd""/>${liquibase.lf}					<xsl:param name=""align""/>${liquibase.lf}					<xsl:param name=""hasUserValue""/>${liquibase.lf}					<xsl:param name=""value""/>${liquibase.lf}					<xsl:param name=""readOnly""/>${liquibase.lf}					<xsl:param name=""refreshPage""/>${liquibase.lf}					<xsl:param name=""customFunction""/>${liquibase.lf}					<xsl:if test=""$renderCmd='title' or $renderCmd='all'"">${liquibase.lf}						<xsl:value-of select=""current()/@title""/>${liquibase.lf}					</xsl:if>${liquibase.lf}					<xsl:if test=""$renderCmd='all'"">${liquibase.lf}						<xsl:choose>${liquibase.lf}							<xsl:when test=""$align='horizontal'"">${liquibase.lf}								<xsl:text>       </xsl:text>${liquibase.lf}							</xsl:when>${liquibase.lf}							<xsl:otherwise>${liquibase.lf}								<br/>${liquibase.lf}							</xsl:otherwise>${liquibase.lf}						</xsl:choose>${liquibase.lf}					</xsl:if>${liquibase.lf}					<xsl:if test=""$globalReadOnly = 'true' or $readOnly = 'true'"">${liquibase.lf}						<xsl:call-template name=""hidden_input"">${liquibase.lf}							<xsl:with-param name=""fieldName"" select=""$fieldName""/>${liquibase.lf}							<xsl:with-param name=""value"" select=""$value""/>${liquibase.lf}						</xsl:call-template>${liquibase.lf}					</xsl:if>${liquibase.lf}					<xsl:if test=""$renderCmd='input' or $renderCmd='all'"">${liquibase.lf}						<select name=""{$fieldName}"">${liquibase.lf}							<xsl:if test=""$customFunction"">${liquibase.lf}							  <xsl:variable name=""customFunction_val"" select=""$customFunction""/>${liquibase.lf}							  <xsl:attribute name=""onChange"">${liquibase.lf}							    <xsl:value-of select=""$customFunction""/>${liquibase.lf}							  </xsl:attribute>${liquibase.lf}							</xsl:if>${liquibase.lf}							<xsl:if test=""$globalReadOnly = 'true'  or $readOnly = 'true'"">${liquibase.lf}								<xsl:attribute name=""disabled"">disabled</xsl:attribute>${liquibase.lf}							</xsl:if>${liquibase.lf}							<xsl:for-each select=""current()/display/values"">${liquibase.lf}								<xsl:variable name=""title"">${liquibase.lf}									<xsl:choose>${liquibase.lf}										<xsl:when test=""@title"">${liquibase.lf}											<xsl:value-of select=""@title""/>${liquibase.lf}										</xsl:when>${liquibase.lf}										<xsl:when test=""@name"">${liquibase.lf}											<xsl:value-of select=""@name""/>${liquibase.lf}										</xsl:when>${liquibase.lf}										<xsl:otherwise>${liquibase.lf}											<xsl:value-of select="".""/>${liquibase.lf}										</xsl:otherwise>${liquibase.lf}									</xsl:choose>${liquibase.lf}								</xsl:variable>${liquibase.lf}								<option title=""{$title}"" value=""{.}"">${liquibase.lf}									<xsl:choose>${liquibase.lf}										<xsl:when test=""$hasUserValue"">${liquibase.lf}											<xsl:if test=""//edlContent/data/version[@current='true']/field[@name=current()/../../@name and value=current()]"">${liquibase.lf}												<!-- <xsl:if test=""$value = current()""> -->${liquibase.lf}												<xsl:attribute name=""selected"">selected</xsl:attribute>${liquibase.lf}											</xsl:if>${liquibase.lf}										</xsl:when>${liquibase.lf}										<xsl:otherwise>${liquibase.lf}											<!-- use the default if no user values are specified -->${liquibase.lf}											<xsl:if test="". = ../../value"">${liquibase.lf}												<xsl:attribute name=""selected"">selected</xsl:attribute>${liquibase.lf}											</xsl:if>${liquibase.lf}										</xsl:otherwise>${liquibase.lf}									</xsl:choose>${liquibase.lf}									<xsl:if test="". = ../../value"">${liquibase.lf}										<xsl:attribute name=""selected"">selected</xsl:attribute>${liquibase.lf}									</xsl:if>${liquibase.lf}									<xsl:value-of select=""$title""/>${liquibase.lf}								</option>${liquibase.lf}							</xsl:for-each>${liquibase.lf}						</select>${liquibase.lf}						<xsl:if test=""$refreshPage = 'true'"">${liquibase.lf}						  <script type=""text/javascript"">${liquibase.lf}						  	// register additional onchange event, use prototype to hide the main form and show a message so as to prevent changes while refreshing. ${liquibase.lf}						  	// programmers are to create the following divisions; html div; that wrap the main form and a seperate div wrapping the message that will show.${liquibase.lf}							register_onchange('<xsl:value-of select=""$fieldName""/>', function() { $('mainform-div').hide(); $('refresh-message').show(); document.forms[0].submit(); });${liquibase.lf}						  </script>${liquibase.lf}						</xsl:if>${liquibase.lf}					</xsl:if>${liquibase.lf}				</xsl:template>${liquibase.lf}				${liquibase.lf}				<xsl:template name=""textarea_input"">${liquibase.lf}					<xsl:param name=""fieldName""/>${liquibase.lf}					<xsl:param name=""renderCmd""/>${liquibase.lf}					<xsl:param name=""align""/>${liquibase.lf}					<xsl:param name=""value""/>${liquibase.lf}					<xsl:param name=""regex""/>${liquibase.lf}					<xsl:param name=""message""/>${liquibase.lf}					<xsl:param name=""validation_required""/>${liquibase.lf}					<xsl:param name=""readOnly""/>${liquibase.lf}					<xsl:param name=""customFunction""/>${liquibase.lf}					<xsl:if test=""$renderCmd='title' or $renderCmd='all'"">${liquibase.lf}						<xsl:value-of select=""current()/@title""/>${liquibase.lf}					</xsl:if>${liquibase.lf}					<xsl:if test=""$globalReadOnly = 'true' or $readOnly = 'true'"">${liquibase.lf}						<xsl:call-template name=""hidden_input"">${liquibase.lf}							<xsl:with-param name=""fieldName"" select=""$fieldName""/>${liquibase.lf}							<xsl:with-param name=""value"" select=""$value""/>${liquibase.lf}						</xsl:call-template>${liquibase.lf}					</xsl:if>${liquibase.lf}					<xsl:if test=""$renderCmd='all'"">${liquibase.lf}						<xsl:choose>${liquibase.lf}							<xsl:when test=""$align='horizontal'"">${liquibase.lf}								<xsl:text>       </xsl:text>${liquibase.lf}							</xsl:when>${liquibase.lf}							<xsl:otherwise>${liquibase.lf}								<br/>${liquibase.lf}							</xsl:otherwise>${liquibase.lf}						</xsl:choose>${liquibase.lf}					</xsl:if>${liquibase.lf}					<xsl:if test=""$renderCmd='input' or $renderCmd='all'"">${liquibase.lf}						<xsl:variable name=""metaCols"" select=""display/meta[name='cols']/value""/>${liquibase.lf}						<xsl:variable name=""cols"">${liquibase.lf}							<xsl:choose>${liquibase.lf}								<xsl:when test=""$metaCols"">${liquibase.lf}									<xsl:value-of select=""$metaCols""/>${liquibase.lf}								</xsl:when>${liquibase.lf}								<xsl:otherwise>1</xsl:otherwise>${liquibase.lf}							</xsl:choose>${liquibase.lf}						</xsl:variable>${liquibase.lf}						<xsl:variable name=""metaRows"" select=""display/meta[name='rows']/value""/>${liquibase.lf}						<xsl:variable name=""rows"">${liquibase.lf}							<xsl:choose>${liquibase.lf}								<xsl:when test=""$metaRows"">${liquibase.lf}									<xsl:value-of select=""$metaRows""/>${liquibase.lf}								</xsl:when>${liquibase.lf}								<xsl:otherwise>1</xsl:otherwise>${liquibase.lf}							</xsl:choose>${liquibase.lf}						</xsl:variable>${liquibase.lf}						<textarea cols=""{$cols}"" name=""{@name}"" rows=""{$rows}"">${liquibase.lf}							<xsl:if test=""$customFunction"">${liquibase.lf}							  <xsl:variable name=""customFunction_val"" select=""$customFunction""/>${liquibase.lf}							  <xsl:attribute name=""onkeyup"">${liquibase.lf}							    <xsl:value-of select=""$customFunction""/>${liquibase.lf}							  </xsl:attribute>${liquibase.lf}							</xsl:if>${liquibase.lf}							<xsl:if test=""$globalReadOnly = 'true'  or $readOnly = 'true'"">${liquibase.lf}								<xsl:attribute name=""disabled"">disabled</xsl:attribute>${liquibase.lf}							</xsl:if>${liquibase.lf}							<!--${liquibase.lf}								force a space if value is empty, or browsers (firefox) set the rest of the literal body content as the value${liquibase.lf}								if the tag is a short-form close tag (!) ${liquibase.lf}							-->${liquibase.lf}							<xsl:choose>${liquibase.lf}								<xsl:when test=""string-length($value) &gt; 0"">${liquibase.lf}									<xsl:value-of select=""$value""/>${liquibase.lf}								</xsl:when>${liquibase.lf}								<xsl:otherwise>${liquibase.lf}									<xsl:text/>${liquibase.lf}								</xsl:otherwise>${liquibase.lf}							</xsl:choose>${liquibase.lf}						</textarea>${liquibase.lf}					</xsl:if>${liquibase.lf}				</xsl:template>${liquibase.lf}	${liquibase.lf}				<xsl:template name=""button_input"">${liquibase.lf}					<xsl:param name=""fieldName""/>${liquibase.lf}					<xsl:param name=""renderCmd""/>${liquibase.lf}					<xsl:param name=""align""/>${liquibase.lf}					<xsl:param name=""customFunction""/>${liquibase.lf}					<xsl:if test=""$renderCmd='title' or $renderCmd='all'"">${liquibase.lf}						<xsl:value-of select=""current()/@title""/>${liquibase.lf}					</xsl:if>${liquibase.lf}					<xsl:if test=""$renderCmd='all'"">${liquibase.lf}						<xsl:choose>${liquibase.lf}							<xsl:when test=""$align='horizontal'"">${liquibase.lf}								<xsl:text>    </xsl:text>${liquibase.lf}							</xsl:when>${liquibase.lf}							<xsl:otherwise>${liquibase.lf}								<br/>${liquibase.lf}							</xsl:otherwise>${liquibase.lf}						</xsl:choose>${liquibase.lf}					</xsl:if>${liquibase.lf}					<xsl:if test=""$renderCmd='input' or $renderCmd='all'"">${liquibase.lf}						<button name=""{$fieldName}"">${liquibase.lf}							<xsl:variable name=""value"" select=""value""/>${liquibase.lf}							<xsl:if test=""$value"">${liquibase.lf}								<xsl:attribute name=""value"">${liquibase.lf}<xsl:value-of select=""$value""/>${liquibase.lf}</xsl:attribute>${liquibase.lf}							</xsl:if>${liquibase.lf}							<xsl:for-each select=""current()/display/meta"">${liquibase.lf}								<xsl:variable name=""attr_name"">${liquibase.lf}									<xsl:value-of select=""name""/>${liquibase.lf}								</xsl:variable>${liquibase.lf}								<xsl:variable name=""attr_value"">${liquibase.lf}									<xsl:value-of select=""value""/>${liquibase.lf}								</xsl:variable>${liquibase.lf}								<xsl:attribute name=""{$attr_name}"">${liquibase.lf}<xsl:value-of select=""$attr_value""/>${liquibase.lf}</xsl:attribute>${liquibase.lf}							</xsl:for-each>${liquibase.lf}							<xsl:value-of select=""$value""/>${liquibase.lf}						</button>${liquibase.lf}					</xsl:if>${liquibase.lf}				</xsl:template>${liquibase.lf}${liquibase.lf}				<xsl:template name=""submitbutton_input"">${liquibase.lf}					<xsl:param name=""fieldName""/>${liquibase.lf}					<xsl:param name=""renderCmd""/>${liquibase.lf}					<xsl:param name=""align""/>${liquibase.lf}					<xsl:param name=""customFunction""/>${liquibase.lf}					<xsl:if test=""$renderCmd='title' or $renderCmd='all'"">${liquibase.lf}						<xsl:value-of select=""current()/@title""/>${liquibase.lf}					</xsl:if>${liquibase.lf}					<xsl:if test=""$renderCmd='all'"">${liquibase.lf}						<xsl:choose>${liquibase.lf}							<xsl:when test=""$align='horizontal'"">${liquibase.lf}								<xsl:text>    </xsl:text>${liquibase.lf}							</xsl:when>${liquibase.lf}							<xsl:otherwise>${liquibase.lf}								<br/>${liquibase.lf}							</xsl:otherwise>${liquibase.lf}						</xsl:choose>${liquibase.lf}					</xsl:if>${liquibase.lf}					<xsl:if test=""$renderCmd='input' or $renderCmd='all'"">${liquibase.lf}						<input name=""{$fieldName}"" type=""submit"">${liquibase.lf}							<xsl:variable name=""value"" select=""value""/>${liquibase.lf}							<xsl:if test=""$value"">${liquibase.lf}								<xsl:attribute name=""value"">${liquibase.lf}<xsl:value-of select=""$value""/>${liquibase.lf}</xsl:attribute>${liquibase.lf}							</xsl:if>${liquibase.lf}							<xsl:for-each select=""current()/display/meta"">${liquibase.lf}								<xsl:variable name=""attr_name"">${liquibase.lf}									<xsl:value-of select=""name""/>${liquibase.lf}								</xsl:variable>${liquibase.lf}								<xsl:variable name=""attr_value"">${liquibase.lf}									<xsl:value-of select=""value""/>${liquibase.lf}								</xsl:variable>${liquibase.lf}								<xsl:attribute name=""{$attr_name}"">${liquibase.lf}<xsl:value-of select=""$attr_value""/>${liquibase.lf}</xsl:attribute>${liquibase.lf}							</xsl:for-each>${liquibase.lf}						</input>${liquibase.lf}					</xsl:if>${liquibase.lf}				</xsl:template>${liquibase.lf}				${liquibase.lf}				<xsl:template name=""hidden_input"">${liquibase.lf}					<xsl:param name=""fieldName""/>${liquibase.lf}					<xsl:param name=""value""/>${liquibase.lf}					<xsl:variable name=""finalValue"">${liquibase.lf}					  <xsl:choose>${liquibase.lf}					    <xsl:when test=""$value"">${liquibase.lf}					      <xsl:value-of select=""$value""/>${liquibase.lf}					    </xsl:when>${liquibase.lf}					    <xsl:otherwise>${liquibase.lf}						  <xsl:value-of select=""//edlContent/data/version[@current='true']/field[@name=string($fieldName)]/value""/>${liquibase.lf}						</xsl:otherwise>${liquibase.lf}					  </xsl:choose>${liquibase.lf}					</xsl:variable>${liquibase.lf}					<input name=""{$fieldName}"" type=""hidden"" value=""{$finalValue}""/>${liquibase.lf}					<!-- <xsl:comment>${liquibase.lf}					XPath: //edlContent/data/version[@current='true']/field[@name={$fieldName}]/value${liquibase.lf}					Escaped: <xsl:value-of select=""my-class:escapeForXPath($fieldName)""/>${liquibase.lf}					What's my value? <xsl:value-of select=""//edlContent/data/version[@current='true']/field[@name=$fieldName]/value""/>${liquibase.lf}					What's my value2? <xsl:value-of select=""//edlContent/data/version[@current='true']/field[@name=my-class:escapeForXPath($fieldName)]/value""/>${liquibase.lf}					</xsl:comment> -->${liquibase.lf}					${liquibase.lf}				</xsl:template>${liquibase.lf}				${liquibase.lf}				<xsl:template name=""page_button"">${liquibase.lf}					<xsl:param name=""pageName""/>${liquibase.lf}					<xsl:param name=""value""/>${liquibase.lf}					<xsl:param name=""readOnly""/>${liquibase.lf}					<xsl:param name=""clickfunction""/>${liquibase.lf}					<xsl:param name=""use_jsButton""/>${liquibase.lf}					<xsl:variable name=""clickFunctionVal"" select=""boolean(normalize-space($clickfunction))""/>${liquibase.lf}					<xsl:choose>${liquibase.lf}						<xsl:when test=""$readOnly='true'"">${liquibase.lf}						  <input disabled=""disabled"" name=""edl.gotoPage:{$pageName}"" type=""submit"" value=""{$value}""/>${liquibase.lf}						</xsl:when>${liquibase.lf}						<xsl:when test=""$clickFunctionVal"">${liquibase.lf}						  <xsl:choose>${liquibase.lf}							<xsl:when test=""$use_jsButton = 'true'"">${liquibase.lf}								<input name=""jsButton"" onClick=""{$clickfunction}"" type=""submit"" value=""{$value}""/>${liquibase.lf}							</xsl:when>${liquibase.lf}							<xsl:otherwise>${liquibase.lf}								<input name=""edl.gotoPage:{$pageName}"" onClick=""{$clickfunction}"" type=""submit"" value=""{$value}""/>${liquibase.lf}							</xsl:otherwise>${liquibase.lf}						  </xsl:choose>${liquibase.lf}						</xsl:when>${liquibase.lf}						<xsl:otherwise>${liquibase.lf}						  <input name=""edl.gotoPage:{$pageName}"" type=""submit"" value=""{$value}""/>${liquibase.lf}						</xsl:otherwise>${liquibase.lf}					</xsl:choose>${liquibase.lf}				</xsl:template>				${liquibase.lf}				${liquibase.lf}				<xsl:template name=""header"">${liquibase.lf}					<table border=""0"" cellpadding=""0"" cellspacing=""0"" class=""headertable"" width=""100%"">${liquibase.lf}						<tr>${liquibase.lf}							<td align=""left"" valign=""top"" width=""10%"">${liquibase.lf}								<img alt=""OneStart Workflow"" height=""21"" hspace=""5"" src=""images/wf-logo.gif"" vspace=""5"" width=""150""/>${liquibase.lf}							</td>${liquibase.lf}							<td align=""right"">${liquibase.lf}								<table border=""0"" cellpadding=""0"" cellspacing=""0"">${liquibase.lf}									<tr>${liquibase.lf}										<td align=""right"" class=""thnormal"">Document Type Name:</td>${liquibase.lf}										<td align=""left"" class=""datacell1"">${liquibase.lf}											<xsl:value-of select=""/documentContent/documentState/docType""/>${liquibase.lf}										</td>${liquibase.lf}									</tr>${liquibase.lf}									<tr>${liquibase.lf}										<td align=""right"" class=""thnormal"">Document Status:</td>${liquibase.lf}										<td align=""left"" class=""datacell1"" width=""50"">${liquibase.lf}											<xsl:value-of select=""//documentState/workflowDocumentState/status""/>${liquibase.lf}										</td>${liquibase.lf}									</tr>${liquibase.lf}									<tr>${liquibase.lf}										<td align=""right"" class=""thnormal"">Create Date:</td>${liquibase.lf}										<td align=""left"" class=""datacell1"">${liquibase.lf}											<xsl:comment>[transient start]</xsl:comment>${liquibase.lf}											<xsl:value-of select=""//documentState/workflowDocumentState/createDate""/>${liquibase.lf}											<xsl:comment>[transient end]</xsl:comment>${liquibase.lf}										</td>${liquibase.lf}									</tr>${liquibase.lf}									<tr>${liquibase.lf}										<td align=""right"" class=""thnormal"">Document ID:</td>${liquibase.lf}										<td align=""left"" class=""datacell1"">${liquibase.lf}												<xsl:comment>[transient start]</xsl:comment>${liquibase.lf}												<xsl:value-of select=""/documentContent/documentState/docId""/>${liquibase.lf}												<xsl:comment>[transient end]</xsl:comment>${liquibase.lf}										</td>${liquibase.lf}									</tr>${liquibase.lf}								</table>${liquibase.lf}							</td>${liquibase.lf}						</tr>${liquibase.lf}					</table>${liquibase.lf}				</xsl:template>${liquibase.lf}	${liquibase.lf}				<xsl:template name=""htmlHead"">${liquibase.lf}					<!-- whether the FIELDS can be edited -->${liquibase.lf}					<!-- <xsl:variable name=""globalReadOnly"" select=""/documentContent/documentState/editable != 'true'""/>-->${liquibase.lf}					<!-- whether the form can be acted upon -->${liquibase.lf}					<xsl:variable name=""actionable"" select=""/documentContent/documentState/actionable = 'true'""/>${liquibase.lf}					<xsl:variable name=""docId"" select=""/documentContent/documentState/docId""/>${liquibase.lf}					<xsl:variable name=""def"" select=""/documentContent/documentState/definition""/>${liquibase.lf}					<xsl:variable name=""docType"" select=""/documentContent/documentState/docType""/>${liquibase.lf}					<xsl:variable name=""style"" select=""/documentContent/documentState/style""/>${liquibase.lf}					<xsl:variable name=""annotatable"" select=""/documentContent/documentState/annotatable = 'true'""/>${liquibase.lf}					<xsl:variable name=""docTitle"">${liquibase.lf}						<xsl:choose>${liquibase.lf}							<xsl:when test=""//edlContent/edl/@title"">${liquibase.lf}								<xsl:value-of select=""//edlContent/edl/@title""/>${liquibase.lf}							</xsl:when>${liquibase.lf}							<xsl:otherwise>${liquibase.lf}								<xsl:value-of select=""//edlContent/edl/@name""/>${liquibase.lf}							</xsl:otherwise>${liquibase.lf}						</xsl:choose>${liquibase.lf}					</xsl:variable>${liquibase.lf}					<xsl:variable name=""pageTitle"">${liquibase.lf}						<xsl:choose>${liquibase.lf}							<xsl:when test=""$globalReadOnly = 'true'"">${liquibase.lf}								Viewing${liquibase.lf}              </xsl:when>${liquibase.lf}							<xsl:otherwise>${liquibase.lf}								Editing${liquibase.lf}              </xsl:otherwise>${liquibase.lf}						</xsl:choose>${liquibase.lf}${liquibase.lf}${liquibase.lf}          </xsl:variable>${liquibase.lf}					<title>${liquibase.lf}						<xsl:value-of select=""$pageTitle""/> Document${liquibase.lf}					</title>${liquibase.lf}					<xsl:comment>* Meta data block for automation/testing</xsl:comment>${liquibase.lf}					<xsl:comment>* 	 [var editable_value=<xsl:value-of select=""//documentState/editable""/>]</xsl:comment>${liquibase.lf}					<xsl:comment>* 	 [var annotatable_value=<xsl:value-of select=""//documentState/annotatable""/>]</xsl:comment>${liquibase.lf}					<xsl:comment>* 	 [var globalReadOnly=<xsl:value-of select=""$globalReadOnly""/>]</xsl:comment>${liquibase.lf}					<xsl:comment>* 	 [var annotatable=<xsl:value-of select=""$annotatable""/>]</xsl:comment>${liquibase.lf}					<xsl:comment>* 	 [var annotation=<xsl:value-of select=""//edlContent/data/version[@current='true']/annotation""/>]</xsl:comment>${liquibase.lf}					<xsl:comment>* 	 [transient start]</xsl:comment>${liquibase.lf}					<xsl:comment>* 	 [var docid=<xsl:value-of select=""$docId""/>]</xsl:comment>${liquibase.lf}					<xsl:comment>* 	 [transient end]</xsl:comment>${liquibase.lf}					<xsl:comment>* 	 [var doctype=<xsl:value-of select=""$docType""/>]</xsl:comment>${liquibase.lf}					<xsl:comment>* 	 [var def=<xsl:value-of select=""$def""/>]</xsl:comment>${liquibase.lf}					<xsl:comment>* 	 [var style=<xsl:value-of select=""$style""/>]</xsl:comment>${liquibase.lf}					<link href=""css/screen.css"" rel=""stylesheet"" type=""text/css""/>${liquibase.lf}					<link href=""css/edoclite1.css"" rel=""stylesheet"" type=""text/css""/>${liquibase.lf}					<script src=""scripts/edoclite1.js"" type=""text/javascript""/>${liquibase.lf}					<script src=""scripts/prototype.js"" type=""text/javascript""/>				${liquibase.lf}					<xsl:if test=""//edlContent/edl/javascript"">${liquibase.lf}						<script type=""text/javascript"">${liquibase.lf}							<xsl:value-of select=""//edlContent/edl/javascript""/>${liquibase.lf}						</script>${liquibase.lf}					</xsl:if>${liquibase.lf}				</xsl:template>${liquibase.lf}${liquibase.lf}				<xsl:template name=""instructions"">${liquibase.lf}					<!-- <xsl:variable name=""globalReadOnly"" select=""/documentContent/documentState/editable != 'true'""/> -->${liquibase.lf}					<xsl:variable name=""docType"" select=""/documentContent/documentState/docType""/>${liquibase.lf}					<xsl:variable name=""docTitle"">${liquibase.lf}						<xsl:choose>${liquibase.lf}							<xsl:when test=""//edlContent/edl/@title"">${liquibase.lf}								<xsl:value-of select=""//edlContent/edl/@title""/>${liquibase.lf}							</xsl:when>${liquibase.lf}							<xsl:otherwise>${liquibase.lf}								<xsl:value-of select=""//edlContent/edl/@name""/>${liquibase.lf}							</xsl:otherwise>${liquibase.lf}						</xsl:choose>${liquibase.lf}					</xsl:variable>${liquibase.lf}					<xsl:variable name=""instructions"">${liquibase.lf}						<xsl:choose>${liquibase.lf}							<xsl:when test=""//edlContent/edl/instructions"">${liquibase.lf}								<xsl:value-of select=""//edlContent/edl/instructions""/>${liquibase.lf}							</xsl:when>${liquibase.lf}							<xsl:otherwise>${liquibase.lf}${liquibase.lf}								Reviewing Document${liquibase.lf}							</xsl:otherwise>${liquibase.lf}						</xsl:choose>${liquibase.lf}					</xsl:variable>${liquibase.lf}					<xsl:variable name=""createInstructions"">${liquibase.lf}						<xsl:choose>${liquibase.lf}							<xsl:when test=""//edlContent/edl/createInstructions"">${liquibase.lf}								<xsl:value-of select=""//edlContent/edl/createInstructions""/>${liquibase.lf}							</xsl:when>${liquibase.lf}							<xsl:otherwise>${liquibase.lf}${liquibase.lf}								Filling out new Document${liquibase.lf}							</xsl:otherwise>${liquibase.lf}						</xsl:choose>${liquibase.lf}					</xsl:variable>${liquibase.lf}					<xsl:variable name=""pageTitle"">${liquibase.lf}						<xsl:choose>${liquibase.lf}							<xsl:when test=""$globalReadOnly = 'true'"">${liquibase.lf}								Viewing${liquibase.lf}							</xsl:when>${liquibase.lf}							<xsl:otherwise>${liquibase.lf}								Editing ${liquibase.lf}							</xsl:otherwise>${liquibase.lf}						</xsl:choose>${liquibase.lf}${liquibase.lf}${liquibase.lf}						Document${liquibase.lf}					</xsl:variable>${liquibase.lf}					<table align=""center"" border=""0"" cellpadding=""10"" cellspacing=""0"" width=""80%"">${liquibase.lf}						<tr>${liquibase.lf}							<td>${liquibase.lf}								<strong>${liquibase.lf}									<xsl:value-of select=""$pageTitle""/>${liquibase.lf}								</strong>${liquibase.lf}							</td>${liquibase.lf}						</tr>${liquibase.lf}						<tr>${liquibase.lf}							<td>${liquibase.lf}								<!-- if 'save' action is present then this is a ""new"" document that has not been routed, and therefore we should display the create instructions -->${liquibase.lf}								<xsl:choose>${liquibase.lf}									<xsl:when test=""//documentState/actionsPossible/save"">${liquibase.lf}										<xsl:value-of select=""$createInstructions""/>${liquibase.lf}									</xsl:when>${liquibase.lf}									<xsl:otherwise>${liquibase.lf}										<xsl:value-of select=""$instructions""/>${liquibase.lf}									</xsl:otherwise>${liquibase.lf}								</xsl:choose>${liquibase.lf}							</td>${liquibase.lf}						</tr>${liquibase.lf}					</table>${liquibase.lf}				</xsl:template>${liquibase.lf}	${liquibase.lf}				<xsl:template name=""errors"">${liquibase.lf}					<!--${liquibase.lf}						<style type=""text/css"">${liquibase.lf}							.error-message {${liquibase.lf}    						color: red;${liquibase.lf}    						text-align: center;${liquibase.lf}							}${liquibase.lf}						</style> ${liquibase.lf}					-->${liquibase.lf}					<table align=""center"" border=""0"" cellpadding=""10"" cellspacing=""0"" width=""80%"">${liquibase.lf}						<xsl:for-each select=""//documentState/error"">${liquibase.lf}							<tr>${liquibase.lf}								<td>${liquibase.lf}									<div class=""error-message"">${liquibase.lf}										<xsl:value-of select="".""/>${liquibase.lf}									</div>${liquibase.lf}								</td>${liquibase.lf}							</tr>${liquibase.lf}						</xsl:for-each>${liquibase.lf}					</table>${liquibase.lf}				</xsl:template>${liquibase.lf}${liquibase.lf}				<xsl:template name=""footer"">${liquibase.lf}					<xsl:if test=""//documentState/userSession/backdoorUser"">${liquibase.lf}						<center>${liquibase.lf}							User${liquibase.lf}							<xsl:choose>${liquibase.lf}								<xsl:when test=""//documentState/userSession/loggedInUser/displayName"">${liquibase.lf}									<xsl:value-of select=""//documentState/userSession/loggedInUser/displayName""/>${liquibase.lf}								</xsl:when>${liquibase.lf}								<xsl:when test=""//documentState/userSession/loggedInUser/networkId"">${liquibase.lf}									<xsl:value-of select=""//documentState/userSession/loggedInUser/networkId""/>${liquibase.lf}								</xsl:when>${liquibase.lf}								<xsl:otherwise>${liquibase.lf}									??Unknown user??${liquibase.lf}								</xsl:otherwise>${liquibase.lf}							</xsl:choose>${liquibase.lf}							standing in for user${liquibase.lf}							<xsl:choose>${liquibase.lf}								<xsl:when test=""//documentState/userSession/backdoorUser/backdoorDisplayName"">${liquibase.lf}									<xsl:value-of select=""//documentState/userSession/backdoorUser/backdoorDisplayName""/>${liquibase.lf}								</xsl:when>${liquibase.lf}								<xsl:when test=""//documentState/userSession/backdoorUser/backdoorNetworkId"">${liquibase.lf}									<xsl:value-of select=""//documentState/userSession/backdoorUser/backdoorNetworkId""/>${liquibase.lf}								</xsl:when>${liquibase.lf}								<xsl:otherwise>${liquibase.lf}									??Unknown user??${liquibase.lf}								</xsl:otherwise>${liquibase.lf}							</xsl:choose>${liquibase.lf}						</center>${liquibase.lf}					</xsl:if>${liquibase.lf}				</xsl:template>${liquibase.lf}${liquibase.lf}				<xsl:template name=""hidden-params"">${liquibase.lf}					<xsl:comment>* Hide this nastiness so we can concentrate on formating above</xsl:comment>${liquibase.lf}					<xsl:variable name=""docId"" select=""/documentContent/documentState/docId""/>${liquibase.lf}					<xsl:variable name=""def"" select=""/documentContent/documentState/definition""/>${liquibase.lf}					<xsl:variable name=""docType"" select=""/documentContent/documentState/docType""/>${liquibase.lf}					<xsl:variable name=""style"" select=""/documentContent/documentState/style""/>${liquibase.lf}					<xsl:variable name=""incrementVersion"" select=""//edlContent/data/version[@current='true']/incrementVersion""/>${liquibase.lf}					<xsl:variable name=""currentPage"" select=""//currentPage""/>${liquibase.lf}					<xsl:variable name=""previousPage"" select=""//previousPage""/>${liquibase.lf}					<div style=""display: none"">${liquibase.lf}						<xsl:if test=""$incrementVersion = 'true'"">${liquibase.lf}							<input name=""incrementVersion"" type=""hidden"" value=""{$incrementVersion}""/>${liquibase.lf}						</xsl:if>${liquibase.lf}						<xsl:choose>${liquibase.lf}							<xsl:when test=""$docId"">${liquibase.lf}								<!-- preserve the data for comparison without transient value -->${liquibase.lf}								<xsl:comment>* input name=""docId"" type=""hidden""</xsl:comment>${liquibase.lf}								<!-- mark the entire input element transient because we can't insert comments in the middle of a tag just to omit a certain attribute -->${liquibase.lf}								<xsl:comment>[transient start]</xsl:comment>${liquibase.lf}								<input name=""docId"" type=""hidden"" value=""{$docId}""/>${liquibase.lf}								<xsl:comment>[transient end]</xsl:comment>${liquibase.lf}							</xsl:when>${liquibase.lf}							<xsl:otherwise>${liquibase.lf}								<xsl:if test=""$docType"">${liquibase.lf}									<input name=""docType"" type=""hidden"" value=""{$docType}""/>${liquibase.lf}								</xsl:if>${liquibase.lf}								<xsl:if test=""$def"">${liquibase.lf}									<input name=""def"" type=""hidden"" value=""{$def}""/>${liquibase.lf}								</xsl:if>${liquibase.lf}								<xsl:if test=""$style"">${liquibase.lf}									<input name=""style"" type=""hidden"" value=""{$style}""/>${liquibase.lf}								</xsl:if>${liquibase.lf}							</xsl:otherwise>${liquibase.lf}						</xsl:choose>${liquibase.lf}						<xsl:if test=""$currentPage"">${liquibase.lf}						  <input name=""edl.currentPage"" type=""hidden"" value=""{$currentPage}""/>${liquibase.lf}						</xsl:if>${liquibase.lf}						<xsl:if test=""$previousPage"">${liquibase.lf}						  <input name=""edl.previousPage"" type=""hidden"" value=""{$previousPage}""/>${liquibase.lf}						</xsl:if>${liquibase.lf}					</div>${liquibase.lf}				</xsl:template>${liquibase.lf}${liquibase.lf}				<xsl:template name=""annotation"">${liquibase.lf}					<xsl:variable name=""annotation"" select=""//edlContent/data/version[@current='true']/annotation""/>${liquibase.lf}					<xsl:variable name=""currentAnnotation"" select=""//edlContent/data/version[@current='true']/currentAnnotation""/>${liquibase.lf}					<xsl:variable name=""annotatable"" select=""/documentContent/documentState/annotatable = 'true'""/>${liquibase.lf}					<xsl:if test=""$annotatable or $annotation or $currentAnnotation"">${liquibase.lf}						<table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" class=""bord-r-t"" width=""80%"">${liquibase.lf}							<tr>${liquibase.lf}								<td align=""center"" class=""thnormal"" colspan=""2"">${liquibase.lf}									<xsl:if test=""$annotation"">${liquibase.lf}										<div>${liquibase.lf}<h4>Annotations</h4>${liquibase.lf}											<xsl:for-each select=""//edlContent/data/version[@current='true']/annotation"">${liquibase.lf}												<div>${liquibase.lf}<xsl:value-of select="".""/>${liquibase.lf}</div>${liquibase.lf}											</xsl:for-each>${liquibase.lf}										</div>${liquibase.lf}										<br/>${liquibase.lf}									</xsl:if>${liquibase.lf}									<xsl:if test=""$annotatable"">${liquibase.lf}										Set annotation:<br/>${liquibase.lf}										<textarea name=""annotation"">${liquibase.lf}											<xsl:value-of select=""$currentAnnotation""/>${liquibase.lf}										</textarea>${liquibase.lf}									</xsl:if>${liquibase.lf}								</td>${liquibase.lf}							</tr>${liquibase.lf}						</table>${liquibase.lf}					</xsl:if>${liquibase.lf}				</xsl:template>${liquibase.lf}${liquibase.lf}				<xsl:template name=""buttons"">${liquibase.lf}					<xsl:param name=""fname""/>${liquibase.lf}					<xsl:param name=""showRTP""/>${liquibase.lf}					<xsl:variable name=""functionName"" select=""$fname""/>${liquibase.lf}					<xsl:variable name=""fxname"" select=""boolean(normalize-space($fname))""/>${liquibase.lf}					<xsl:variable name=""actionable"" select=""/documentContent/documentState/actionable = 'true'""/>${liquibase.lf}					<xsl:variable name=""apos"" select=""&quot;'&quot;""/>					${liquibase.lf}					<xsl:variable name=""showRTPbutton"" select=""$showRTP""/>					${liquibase.lf}					<xsl:if test=""//documentState/actionsPossible/*"">${liquibase.lf}						<table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" class=""bord-r-t"" width=""80%"">${liquibase.lf}							<tr>${liquibase.lf}								<td align=""center"" class=""thnormal"" colspan=""2"">${liquibase.lf}									<xsl:text>									</xsl:text>${liquibase.lf}										<xsl:for-each select=""//documentState/actionsPossible/*[. != 'returnToPrevious']"">${liquibase.lf}											<xsl:variable name=""actionTitle"">${liquibase.lf}												<xsl:choose>${liquibase.lf}													<xsl:when test=""@title"">${liquibase.lf}														<xsl:value-of select=""@title""/>${liquibase.lf}													</xsl:when>${liquibase.lf}													<xsl:otherwise>${liquibase.lf}														<xsl:value-of select=""local-name()""/>${liquibase.lf}													</xsl:otherwise>${liquibase.lf}												</xsl:choose>${liquibase.lf}											</xsl:variable>${liquibase.lf}										<xsl:if test=""local-name() != 'returnToPrevious' or local-name() = 'returnToPrevious' and not($showRTPbutton = 'false')"">${liquibase.lf}											<input name=""userAction"" title=""{$actionTitle}"" type=""submit"">${liquibase.lf}												<xsl:if test=""not($actionable)"">${liquibase.lf}													<xsl:attribute name=""disabled"">disabled</xsl:attribute>${liquibase.lf}												</xsl:if>												${liquibase.lf}											 <xsl:choose>${liquibase.lf}												<xsl:when test=""$fxname"">${liquibase.lf}												  <xsl:attribute name=""onclick"">${liquibase.lf}													  <xsl:value-of select=""'buttonClick('""/>${liquibase.lf}													  <xsl:value-of select=""$apos""/>${liquibase.lf}													  <xsl:value-of select=""$actionTitle""/>${liquibase.lf}													  <xsl:value-of select=""$apos""/>${liquibase.lf}													  <xsl:value-of select=""'); '""/>${liquibase.lf}													  <xsl:value-of select=""'buttonClickFunctionName('""/>${liquibase.lf}													  <xsl:value-of select=""$functionName""/>${liquibase.lf}													  <xsl:value-of select=""')'""/>${liquibase.lf}													</xsl:attribute>${liquibase.lf}												</xsl:when>${liquibase.lf}												<xsl:otherwise>${liquibase.lf}													<xsl:attribute name=""onclick"">${liquibase.lf}													  <xsl:value-of select=""'buttonClick('""/>${liquibase.lf}													  <xsl:value-of select=""$apos""/>${liquibase.lf}													  <xsl:value-of select=""$actionTitle""/>${liquibase.lf}													  <xsl:value-of select=""$apos""/>${liquibase.lf}													  <xsl:value-of select=""')'""/>${liquibase.lf}													</xsl:attribute>${liquibase.lf}												</xsl:otherwise>${liquibase.lf}											  </xsl:choose>${liquibase.lf}											  <xsl:choose>${liquibase.lf}											    <xsl:when test=""local-name() = 'route'"">${liquibase.lf}											      <xsl:attribute name=""value"">${liquibase.lf}											        <xsl:value-of select=""'submit'""/>${liquibase.lf}											      </xsl:attribute>${liquibase.lf}											    </xsl:when>${liquibase.lf}											    <xsl:when test=""local-name() = 'blanketApprove'"">${liquibase.lf}											      <xsl:attribute name=""value"">${liquibase.lf}											        <xsl:value-of select=""'blanket approve'""/>${liquibase.lf}											      </xsl:attribute>${liquibase.lf}											    </xsl:when>${liquibase.lf}											    <xsl:when test=""local-name() = 'returnToPrevious'"">${liquibase.lf}											      <xsl:attribute name=""value"">${liquibase.lf}											        <xsl:value-of select=""'return to previous'""/>${liquibase.lf}											      </xsl:attribute>${liquibase.lf}											    </xsl:when>${liquibase.lf}											    <xsl:otherwise>${liquibase.lf}											      <xsl:attribute name=""value"">${liquibase.lf}											        <xsl:value-of select=""local-name()""/>${liquibase.lf}											      </xsl:attribute>${liquibase.lf}											    </xsl:otherwise>${liquibase.lf}											  </xsl:choose>${liquibase.lf}											</input>${liquibase.lf}										</xsl:if>${liquibase.lf}											<xsl:text>                 					 </xsl:text>${liquibase.lf}										</xsl:for-each>${liquibase.lf}								${liquibase.lf}								<xsl:if test=""not($showRTPbutton = 'false')"">${liquibase.lf}									<xsl:if test=""//documentState/actionsPossible/returnToPrevious"">${liquibase.lf}										<select name=""previousNode"">${liquibase.lf}											<xsl:if test=""not($actionable) or $showRTPbutton = 'false'"">${liquibase.lf}												<xsl:attribute name=""disabled"">disabled</xsl:attribute>${liquibase.lf}											</xsl:if>${liquibase.lf}											<xsl:for-each select=""//documentState/previousNodes/node"">${liquibase.lf}												<option value=""{.}"">${liquibase.lf}													<xsl:value-of select="".""/>${liquibase.lf}												</option>${liquibase.lf}											</xsl:for-each>${liquibase.lf}										</select>${liquibase.lf}										<xsl:text>                 					 </xsl:text>${liquibase.lf}									</xsl:if>${liquibase.lf}								</xsl:if>${liquibase.lf}								</td>${liquibase.lf}							</tr>${liquibase.lf}						</table>${liquibase.lf}					</xsl:if>${liquibase.lf}				</xsl:template>${liquibase.lf}${liquibase.lf}				<xsl:template match=""/"">${liquibase.lf}					<xsl:choose>${liquibase.lf}						<xsl:when test=""$overrideMain='true'"">${liquibase.lf}							<xsl:call-template name=""mainForm""/>${liquibase.lf}						</xsl:when>${liquibase.lf}						<xsl:otherwise>${liquibase.lf}							<html>${liquibase.lf}								<head>${liquibase.lf}									<xsl:call-template name=""htmlHead""/>${liquibase.lf}								</head>${liquibase.lf}								<body onload=""onPageLoad()"">${liquibase.lf}									<xsl:call-template name=""header""/>${liquibase.lf}									<xsl:call-template name=""instructions""/>${liquibase.lf}									<xsl:call-template name=""errors""/>${liquibase.lf}									<xsl:variable name=""formTarget"" select=""'EDocLite'""/>${liquibase.lf}									<form accept-charset=""ISO-8859-1"" action=""{$formTarget}"" enctype=""multipart/form-data"" id=""edoclite"" method=""post"" onsubmit=""return validateOnSubmit(this)"">${liquibase.lf}										<xsl:call-template name=""hidden-params""/>${liquibase.lf}										<xsl:call-template name=""mainBody""/>${liquibase.lf}										<xsl:call-template name=""annotation""/>${liquibase.lf}										<xsl:call-template name=""buttons""/>${liquibase.lf}										<br/>${liquibase.lf}										<xsl:call-template name=""notes""/>${liquibase.lf}									</form>${liquibase.lf}									<xsl:call-template name=""footer""/>${liquibase.lf}								</body>${liquibase.lf}							</html>${liquibase.lf}						</xsl:otherwise>${liquibase.lf}					</xsl:choose>${liquibase.lf}				</xsl:template>${liquibase.lf}${liquibase.lf}				<xsl:template name=""notes"">${liquibase.lf}					<xsl:if test=""//NoteForm"">${liquibase.lf}						<xsl:variable name=""showEdit"" select=""//NoteForm/showEdit""/>${liquibase.lf}						<xsl:variable name=""showAdd"" select=""//NoteForm/showAdd""/>${liquibase.lf}						<input name=""showEdit"" type=""hidden"">${liquibase.lf}							<xsl:attribute name=""value"">${liquibase.lf}<xsl:value-of select=""//NoteForm/showEdit""/>${liquibase.lf}</xsl:attribute>${liquibase.lf}						</input>${liquibase.lf}						<input name=""showAdd"" type=""hidden"">${liquibase.lf}							<xsl:attribute name=""value"">${liquibase.lf}<xsl:value-of select=""//NoteForm/showAdd""/>${liquibase.lf}</xsl:attribute>${liquibase.lf}						</input>${liquibase.lf}						<input name=""methodToCall"" type=""hidden""/>${liquibase.lf}						<input name=""sortNotes"" type=""hidden"">${liquibase.lf}							<xsl:attribute name=""value"">${liquibase.lf}<xsl:value-of select=""//NoteForm/sortNotes""/>${liquibase.lf}</xsl:attribute>${liquibase.lf}						</input>${liquibase.lf}						<input name=""noteIdNumber"" type=""hidden"">${liquibase.lf}							<xsl:attribute name=""value"">${liquibase.lf}<xsl:value-of select=""//NoteForm/noteIdNumber""/>${liquibase.lf}</xsl:attribute>${liquibase.lf}						</input>${liquibase.lf}						<table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" class=""bord-r-t"" width=""80%"">${liquibase.lf}							<xsl:if test=""$showAdd = 'true'"">${liquibase.lf}								<tr>${liquibase.lf}									<td align=""center"" class=""thnormal2"" colspan=""4"" scope=""col"">${liquibase.lf}										<b>Create Note </b>${liquibase.lf}									</td>${liquibase.lf}								</tr>${liquibase.lf}								<tr>${liquibase.lf}									<td class=""thnormal"" scope=""col"">${liquibase.lf}										<div align=""center"">Author</div>${liquibase.lf}									</td>${liquibase.lf}									<td class=""thnormal"" scope=""col"">${liquibase.lf}										<div align=""center"">Date</div>${liquibase.lf}									</td>${liquibase.lf}									<td class=""thnormal"" scope=""col"">${liquibase.lf}										<div align=""center"">Note</div>${liquibase.lf}									</td>${liquibase.lf}									<td class=""thnormal"" scope=""col"">${liquibase.lf}										<div align=""center"">Action</div>${liquibase.lf}									</td>${liquibase.lf}								</tr>${liquibase.lf}								<tr valign=""top"">${liquibase.lf}									<td class=""datacell"">${liquibase.lf}										<xsl:if test=""$globalReadOnly != 'true'"">${liquibase.lf}											<xsl:value-of select=""//NoteForm/currentUserName""/>${liquibase.lf}										</xsl:if>${liquibase.lf}									</td>${liquibase.lf}									<td class=""datacell"">${liquibase.lf}										<xsl:if test=""$globalReadOnly != 'true'"">${liquibase.lf}											<xsl:comment>[transient start]</xsl:comment>${liquibase.lf}											<xsl:value-of select=""//NoteForm/currentDate""/>${liquibase.lf}            				  <xsl:comment>[transient end]</xsl:comment>${liquibase.lf}										</xsl:if>${liquibase.lf}									</td>${liquibase.lf}									<td class=""datacell"">${liquibase.lf}										<xsl:choose>${liquibase.lf}											<xsl:when test=""$showEdit = 'yes'"">${liquibase.lf}												<textarea cols=""60"" disabled=""true"" name=""addText"" rows=""3""/>${liquibase.lf}												<xsl:if test=""$showAttachments = 'true'"">${liquibase.lf}													<br/>Attachment:	<input disabled=""true"" name=""file"" type=""file""/>${liquibase.lf}												</xsl:if>${liquibase.lf}											</xsl:when>${liquibase.lf}											<xsl:otherwise>${liquibase.lf}												<textarea cols=""60"" name=""addText"" rows=""3"">${liquibase.lf}													<xsl:if test=""$globalReadOnly = 'true'"">${liquibase.lf}														<xsl:attribute name=""disabled"">disabled</xsl:attribute>${liquibase.lf}													</xsl:if>${liquibase.lf}												</textarea>${liquibase.lf}												<xsl:if test=""$showAttachments = 'true'"">${liquibase.lf}													<br/>${liquibase.lf}													Attachment:	${liquibase.lf}													<input name=""file"" type=""file"">${liquibase.lf}														<xsl:if test=""$globalReadOnly = 'true'"">${liquibase.lf}															<xsl:attribute name=""disabled"">disabled</xsl:attribute>${liquibase.lf}														</xsl:if>${liquibase.lf}													</input>${liquibase.lf}												</xsl:if>${liquibase.lf}											</xsl:otherwise>${liquibase.lf}										</xsl:choose>${liquibase.lf}									</td>${liquibase.lf}									<td class=""datacell"">${liquibase.lf}										<xsl:choose>${liquibase.lf}											<xsl:when test=""$showEdit = 'yes'"">${liquibase.lf}												<div align=""center"">${liquibase.lf}													<img height=""15"" hspace=""3"" src=""images/tinybutton-save-disable.gif"" vspace=""3"" width=""45""/>${liquibase.lf}												</div>${liquibase.lf}											</xsl:when>${liquibase.lf}											<xsl:otherwise>${liquibase.lf}												<div align=""center"">${liquibase.lf}													<xsl:choose>${liquibase.lf}														<xsl:when test=""$globalReadOnly = 'true'"">${liquibase.lf}															<img height=""15"" hspace=""3"" src=""images/tinybutton-save-disable.gif"" vspace=""3"" width=""45""/>${liquibase.lf}														</xsl:when>${liquibase.lf}														<xsl:otherwise>${liquibase.lf}															<img border=""0"" height=""15"" hspace=""3"" onclick=""document.forms[0].methodToCall.value='save'; document.forms[0].submit();"" src=""images/tinybutton-save.gif"" vspace=""3"" width=""45""/>${liquibase.lf}														</xsl:otherwise>${liquibase.lf}													</xsl:choose>${liquibase.lf}												</div>${liquibase.lf}											</xsl:otherwise>${liquibase.lf}										</xsl:choose>${liquibase.lf}									</td>${liquibase.lf}								</tr>${liquibase.lf}							</xsl:if>${liquibase.lf}							<xsl:choose>${liquibase.lf}								<xsl:when test=""//NoteForm/numberOfNotes &gt;0"">${liquibase.lf}									<tr>${liquibase.lf}										<td align=""center"" class=""thnormal2"" colspan=""4"" scope=""col"">${liquibase.lf}											<b>View Notes </b>${liquibase.lf}										</td>${liquibase.lf}									</tr>${liquibase.lf}									<tr>${liquibase.lf}										<td class=""thnormal"" scope=""col"">${liquibase.lf}											<div align=""center"">Author</div>${liquibase.lf}										</td>${liquibase.lf}										<td class=""thnormal"" scope=""col"">${liquibase.lf}											<div align=""center"">${liquibase.lf}												 <xsl:choose>${liquibase.lf}													<xsl:when test=""$globalReadOnly = 'true'"">${liquibase.lf}														Date${liquibase.lf}													</xsl:when>${liquibase.lf}													<xsl:otherwise>${liquibase.lf}														<a href=""javascript: document.forms[0].elements['methodToCall'].value = 'sort'; document.forms[0].elements['sortNotes'].value = 'true'; document.forms[0].submit();"">Date</a>${liquibase.lf}														<img height=""5"" src=""images/arrow-expcol-down.gif"" width=""9""/>${liquibase.lf}													</xsl:otherwise>${liquibase.lf}												</xsl:choose>${liquibase.lf}											</div>${liquibase.lf}										</td>${liquibase.lf}										<td class=""thnormal"" scope=""col"">${liquibase.lf}											<div align=""center"">Note</div>${liquibase.lf}										</td>${liquibase.lf}										<td class=""thnormal"" scope=""col"">${liquibase.lf}											<div align=""center"">Action</div>${liquibase.lf}										</td>${liquibase.lf}									</tr>${liquibase.lf}									<xsl:for-each select=""//NoteForm/Notes/Note"">${liquibase.lf}										<tr valign=""top"">${liquibase.lf}											<td class=""datacell"">${liquibase.lf}												<xsl:value-of select=""noteAuthorFullName""/>${liquibase.lf}											</td>${liquibase.lf}											<td class=""datacell"">${liquibase.lf}            			      <xsl:comment>[transient start]</xsl:comment>${liquibase.lf}												<xsl:value-of select=""formattedCreateDate""/>${liquibase.lf}              			    <xsl:comment>[transient end]</xsl:comment>${liquibase.lf}												<br/>${liquibase.lf}                			  <xsl:comment>[transient start]</xsl:comment>${liquibase.lf}												<xsl:value-of select=""formattedCreateTime""/>${liquibase.lf}												<xsl:comment>[transient end]</xsl:comment>${liquibase.lf}											</td>${liquibase.lf}											<td class=""datacell"">${liquibase.lf}												 <xsl:choose>${liquibase.lf}													<xsl:when test=""editingNote = 'true' and authorizedToEdit = 'true'"">${liquibase.lf}														<textarea cols=""60"" name=""noteText"" rows=""3"">${liquibase.lf}															<xsl:if test=""$globalReadOnly = 'true'"">${liquibase.lf}																<xsl:attribute name=""disabled"">disabled</xsl:attribute>${liquibase.lf}															</xsl:if>${liquibase.lf}															<xsl:value-of select=""noteText""/>${liquibase.lf}														</textarea>${liquibase.lf}														<br/>${liquibase.lf}														<xsl:if test=""$showAttachments = 'true'"">${liquibase.lf}															<xsl:choose>${liquibase.lf}																<xsl:when test=""attachments/attachment"">${liquibase.lf}																	<xsl:for-each select=""attachments/attachment"">${liquibase.lf}																		<xsl:value-of select=""fileName""/>   ${liquibase.lf}																		<input name=""idInEdit"" type=""hidden"">${liquibase.lf}																			<xsl:attribute name=""value"">${liquibase.lf}<xsl:value-of select=""../../noteId""/>${liquibase.lf}</xsl:attribute>${liquibase.lf}																		</input>${liquibase.lf}																		<xsl:choose>${liquibase.lf}																			<xsl:when test=""$globalReadOnly = 'true'"">${liquibase.lf}																			</xsl:when>${liquibase.lf}																			<xsl:otherwise>${liquibase.lf}																				<a href=""javascript: document.forms[0].elements['methodToCall'].value = 'deleteAttachment'; document.forms[0].submit();"">delete</a>  ${liquibase.lf}	                    									<xsl:variable name=""hrefStr"">attachment?attachmentId=<xsl:value-of select=""attachmentId""/>${liquibase.lf}</xsl:variable>${liquibase.lf}																				<a href=""{$hrefStr}"">download</a>${liquibase.lf}	                     								</xsl:otherwise>${liquibase.lf}	                     							</xsl:choose>${liquibase.lf}																	</xsl:for-each>${liquibase.lf}																</xsl:when>${liquibase.lf}																<xsl:otherwise>${liquibase.lf}																	<br/>${liquibase.lf}																	Attachment:	${liquibase.lf}																	<input name=""file"" type=""file"">${liquibase.lf}																		<xsl:if test=""$globalReadOnly = 'true'"">${liquibase.lf}																			<xsl:attribute name=""disabled"">disabled</xsl:attribute>${liquibase.lf}																		</xsl:if>${liquibase.lf}																	</input>${liquibase.lf}																</xsl:otherwise>${liquibase.lf}															</xsl:choose>${liquibase.lf}														</xsl:if>${liquibase.lf}													</xsl:when>${liquibase.lf}													<xsl:otherwise>${liquibase.lf}														<xsl:value-of select=""noteText""/>${liquibase.lf}														<br/>${liquibase.lf}														<br/>${liquibase.lf}														<xsl:if test=""$showAttachments = 'true'"">${liquibase.lf}															<xsl:for-each select=""attachments/attachment"">${liquibase.lf}																<xsl:value-of select=""fileName""/>   ${liquibase.lf}	                    					<xsl:variable name=""hrefStr"">attachment?attachmentId=<xsl:value-of select=""attachmentId""/>${liquibase.lf}</xsl:variable>${liquibase.lf}																<a href=""{$hrefStr}"">download</a>${liquibase.lf}															</xsl:for-each>${liquibase.lf}														</xsl:if>${liquibase.lf}													</xsl:otherwise>${liquibase.lf}												</xsl:choose>${liquibase.lf}											</td>${liquibase.lf}											<td class=""datacell"">${liquibase.lf}												<xsl:choose>${liquibase.lf}													<xsl:when test=""editingNote = 'true' and authorizedToEdit = 'true' and $globalReadOnly != 'true'"">${liquibase.lf}														<div align=""center"">${liquibase.lf}															<img border=""0"" height=""15"" hspace=""3"" src=""images/tinybutton-save.gif"" vspace=""3"" width=""40"">${liquibase.lf}																<xsl:attribute name=""onclick"">document.forms[0].elements['methodToCall'].value = 'save';${liquibase.lf}																	document.forms[0].elements['noteIdNumber'].value = <xsl:value-of select=""noteId""/>;${liquibase.lf}																	document.forms[0].submit();${liquibase.lf}																</xsl:attribute>${liquibase.lf}															</img>${liquibase.lf}															<img border=""0"" height=""15"" hspace=""3"" onclick=""document.forms[0].elements['methodToCall'].value = 'cancel'; document.forms[0].submit();"" src=""images/tinybutton-cancel.gif"" vspace=""3"" width=""40""/>${liquibase.lf}														</div>${liquibase.lf}													</xsl:when>${liquibase.lf}													<xsl:otherwise>${liquibase.lf}														<xsl:choose>${liquibase.lf}															<xsl:when test=""../../showEdit != 'yes' and authorizedToEdit = 'true' and $globalReadOnly !='true'"">${liquibase.lf}																<div align=""center"">${liquibase.lf}																	<img border=""0"" height=""15"" hspace=""3"" src=""images/tinybutton-edit1.gif"" vspace=""3"" width=""40"">${liquibase.lf}																		<xsl:attribute name=""onclick"">document.forms[0].elements['methodToCall'].value = 'edit';${liquibase.lf}																			document.forms[0].elements['noteIdNumber'].value = <xsl:value-of select=""noteId""/>;${liquibase.lf}																			document.forms[0].submit();${liquibase.lf}																		</xsl:attribute>${liquibase.lf}																	</img>${liquibase.lf}																	<img border=""0"" height=""15"" hspace=""3"" src=""images/tinybutton-delete1.gif"" vspace=""3"" width=""40"">${liquibase.lf}																		<xsl:attribute name=""onclick"">document.forms[0].elements['methodToCall'].value = 'delete';${liquibase.lf}																			document.forms[0].elements['noteIdNumber'].value = <xsl:value-of select=""noteId""/>;${liquibase.lf}																			document.forms[0].submit();${liquibase.lf}																		</xsl:attribute>${liquibase.lf}																	</img>${liquibase.lf}																</div>${liquibase.lf}															</xsl:when>${liquibase.lf}															<xsl:otherwise>${liquibase.lf}																<div align=""center"">${liquibase.lf}																	<img height=""15"" hspace=""3"" src=""images/tinybutton-edit1-disable.gif"" vspace=""3"" width=""40""/>${liquibase.lf}																	<img height=""15"" src=""images/tinybutton-delete1-disabled.gif"" vspace=""3"" width=""40""/>${liquibase.lf}																</div>${liquibase.lf}															</xsl:otherwise>${liquibase.lf}														</xsl:choose>${liquibase.lf}													</xsl:otherwise>${liquibase.lf}												</xsl:choose>${liquibase.lf}											</td>${liquibase.lf}										</tr>${liquibase.lf}									</xsl:for-each>${liquibase.lf}								</xsl:when>${liquibase.lf}								<xsl:otherwise>${liquibase.lf}									<xsl:if test=""//NoteForm/showAdd != 'true'"">${liquibase.lf}										<tr>${liquibase.lf}											<td class=""thnormal2"">${liquibase.lf}												<table border=""0"" cellpadding=""0"" cellspacing=""0"" height=""100%"" width=""100%"">${liquibase.lf}													<tbody>${liquibase.lf}														<tr>${liquibase.lf}															<td align=""center"" class=""spacercell"" valign=""middle"">${liquibase.lf}																<div align=""center"">${liquibase.lf}																	<br/>${liquibase.lf}																	<br/>${liquibase.lf}																	<br/>${liquibase.lf}																	<p>No notes available </p>${liquibase.lf}																	<xsl:if test=""//NoteForm/authorizedToAdd = 'true'"">${liquibase.lf}																		<p>${liquibase.lf}																			<img border=""0"" height=""15"" hspace=""3"" onclick=""document.forms[0].elements['methodToCall'].value = 'add'; document.forms[0].submit();"" src=""images/tinybutton-addnote.gif"" vspace=""3"" width=""66""/>${liquibase.lf}																		</p>${liquibase.lf}																	</xsl:if>${liquibase.lf}																</div>${liquibase.lf}															</td>${liquibase.lf}														</tr>${liquibase.lf}													</tbody>${liquibase.lf}												</table>${liquibase.lf}											</td>${liquibase.lf}										</tr>${liquibase.lf}									</xsl:if>${liquibase.lf}								</xsl:otherwise> ${liquibase.lf}							</xsl:choose> ${liquibase.lf}						</table>${liquibase.lf}					</xsl:if>${liquibase.lf}				</xsl:template> ${liquibase.lf}                <xsl:template name=""lookup"">${liquibase.lf}                  <xsl:param name=""fieldName""/>${liquibase.lf}                  <xsl:param name=""readOnly""/>${liquibase.lf}                  <xsl:if test=""$globalReadOnly != 'true' and $readOnly != 'true'"">${liquibase.lf}                    <xsl:if test=""//fieldDef[@name=$fieldName]/lookup"">${liquibase.lf}                      <input name=""userAction.performLookup.{$fieldName}"" onclick=""buttonClick('performLookup');"" src=""images/searchicon.gif"" type=""image"" value=""performLookup.{$fieldName}""/>${liquibase.lf}                    </xsl:if>${liquibase.lf}                  </xsl:if>${liquibase.lf}                </xsl:template>${liquibase.lf}			</xsl:stylesheet>${liquibase.lf}","1","1","78f41de9-d148-4e84-855c-b3359f726650"
"2021","eDoc.Example1.Style","<xsl:stylesheet xmlns:my-class=""xalan://org.kuali.rice.edl.framework.util.EDLFunctions"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" version=""1.0"">${liquibase.lf}        <!-- widgets is simply more xslt that contains common functionality that greatly simplifies html rendering. It is somewhat complicated but does not require changes or full understanding unless enhancements are required.  -->${liquibase.lf}        <xsl:include href=""widgets""/>${liquibase.lf}        <xsl:output indent=""yes"" method=""html"" omit-xml-declaration=""yes"" version=""4.01""/>${liquibase.lf}        <!-- variables in the current version of xslt cannot be changed once set. Below they are set to various values often fed by java classes or to values contained in workflow xml. Not all of these are used in this form but are shown because often they can be useful. The ones prefixed with my-class are methods that are exposed by workflow to Edoclite.-->${liquibase.lf}        <xsl:variable name=""actionable"" select=""/documentContent/documentState/actionable""/>${liquibase.lf}        <xsl:variable name=""docHeaderId"" select=""/documentContent/documentState/docId""/>${liquibase.lf}        <xsl:variable name=""editable"" select=""/documentContent/documentState/editable""/>${liquibase.lf}        <xsl:variable name=""globalReadOnly"" select=""/documentContent/documentState/editable != 'true'""/>${liquibase.lf}        <xsl:variable name=""docStatus"" select=""//documentState/workflowDocumentState/status""/>${liquibase.lf}        <xsl:variable name=""isAtNodeInitiated"" select=""my-class:isAtNode($docHeaderId, 'Initiated')""/>${liquibase.lf}        <xsl:variable name=""isPastInitiated"" select=""my-class:isNodeInPreviousNodeList('Initiated', $docHeaderId)""/>${liquibase.lf}        <xsl:variable name=""isUserInitiator"" select=""my-class:isUserInitiator($docHeaderId)""/>${liquibase.lf}        <xsl:param name=""overrideMain"" select=""'true'""/>${liquibase.lf}        <!-- mainForm begins here. Execution of stylesheet begins here. It calls other templates which can call other templates. Position of templates beyond this point do not matter. -->${liquibase.lf}        <xsl:template name=""mainForm"">${liquibase.lf}          <html xmlns="""">${liquibase.lf}            <head>${liquibase.lf}              <script language=""javascript""/>${liquibase.lf}              <xsl:call-template name=""htmlHead""/>${liquibase.lf}            </head>${liquibase.lf}            <body onload=""onPageLoad()"">${liquibase.lf}              <xsl:call-template name=""errors""/>${liquibase.lf}              <!-- the header is usefule because it tells the user whether they are in 'Editing' mode or 'Read Only' mode. -->${liquibase.lf}              <xsl:call-template name=""header""/>${liquibase.lf}              <xsl:call-template name=""instructions""/>${liquibase.lf}              <xsl:variable name=""formTarget"" select=""'EDocLite'""/>${liquibase.lf}              <!-- validateOnSubmit is a function in edoclite1.js which also supports edloclite forms and can be somewhat complicated but does not require modification unless enhancements are required. -->${liquibase.lf}              <form action=""{$formTarget}"" enctype=""multipart/form-data"" id=""edoclite"" method=""post"" onsubmit=""return validateOnSubmit(this)"">${liquibase.lf}                <xsl:call-template name=""hidden-params""/>${liquibase.lf}                <xsl:call-template name=""mainBody""/>${liquibase.lf}                <xsl:call-template name=""notes""/>${liquibase.lf}                <br/>${liquibase.lf}                <xsl:call-template name=""buttons""/>${liquibase.lf}                <br/>${liquibase.lf}              </form>${liquibase.lf}              <xsl:call-template name=""footer""/>${liquibase.lf}            </body>${liquibase.lf}          </html>${liquibase.lf}        </xsl:template>${liquibase.lf}        <!-- mainBody template begins here. It calls other templates which can call other templates. Position of templates do not matter. -->${liquibase.lf}        <xsl:template name=""mainBody"">${liquibase.lf}          <!--${liquibase.lf}to debug, or see values of previously created, the uncomment the following line to see value of $docStatus rendered on form. -->${liquibase.lf}          <!-- $docStatus=<xsl:value-of select=""$docStatus"" />${liquibase.lf}-->${liquibase.lf}          <!-- rest of this all is within the form table -->${liquibase.lf}          <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" class=""bord-r-t"" width=""80%"" xmlns="""">${liquibase.lf}            <tr>${liquibase.lf}              <td align=""left"" border=""3"" class=""thnormal"" colspan=""1"">${liquibase.lf}                <br/>${liquibase.lf}                <h3>${liquibase.lf}                  Indiana University${liquibase.lf}                  <br/>${liquibase.lf}                  EDL EDoclite Example${liquibase.lf}                </h3>${liquibase.lf}                <br/>${liquibase.lf}              </td>${liquibase.lf}              <td align=""center"" border=""3"" class=""thnormal"" colspan=""2"">${liquibase.lf}                <br/>${liquibase.lf}                <h2>eDocLite Example 1 Form</h2>${liquibase.lf}              </td>${liquibase.lf}            </tr>${liquibase.lf}            <tr>${liquibase.lf}              <td class=""headercell5"" colspan=""100%"">${liquibase.lf}                <b>User Information</b>${liquibase.lf}              </td>${liquibase.lf}            </tr>${liquibase.lf}            <tr>${liquibase.lf}              <!-- IU usually autofills initiator name from Authentication system, and makes it readOnly. See other examples for this type of behavior. -->${liquibase.lf}              <td class=""thnormal"">${liquibase.lf}                <xsl:call-template name=""widget_render"">${liquibase.lf}                  <xsl:with-param name=""fieldName"" select=""'userName'""/>${liquibase.lf}                  <xsl:with-param name=""renderCmd"" select=""'title'""/>${liquibase.lf}                </xsl:call-template>${liquibase.lf}                <font color=""#ff0000"">*</font>${liquibase.lf}              </td>${liquibase.lf}              <td class=""datacell"">${liquibase.lf}                <xsl:call-template name=""widget_render"">${liquibase.lf}                  <xsl:with-param name=""fieldName"" select=""'userName'""/>${liquibase.lf}                  <xsl:with-param name=""renderCmd"" select=""'input'""/>${liquibase.lf}                  <xsl:with-param name=""readOnly"" select=""$isPastInitiated""/>${liquibase.lf}                </xsl:call-template>${liquibase.lf}              </td>${liquibase.lf}            </tr>${liquibase.lf}            <tr>${liquibase.lf}              <td class=""headercell5"" colspan=""100%"">${liquibase.lf}                <b>Other Information</b>${liquibase.lf}              </td>${liquibase.lf}            </tr>${liquibase.lf}            <tr>${liquibase.lf}              <td class=""thnormal"">${liquibase.lf}                <xsl:call-template name=""widget_render"">${liquibase.lf}                  <xsl:with-param name=""fieldName"" select=""'rqstDate'""/>${liquibase.lf}                  <xsl:with-param name=""renderCmd"" select=""'title'""/>${liquibase.lf}                </xsl:call-template>${liquibase.lf}                <font color=""#ff0000"">*</font>${liquibase.lf}              </td>${liquibase.lf}              <td class=""datacell"">${liquibase.lf}                <xsl:call-template name=""widget_render"">${liquibase.lf}                  <xsl:with-param name=""fieldName"" select=""'rqstDate'""/>${liquibase.lf}                  <xsl:with-param name=""renderCmd"" select=""'input'""/>${liquibase.lf}                  <xsl:with-param name=""readOnly"" select=""$isPastInitiated""/>${liquibase.lf}                </xsl:call-template>${liquibase.lf}              </td>${liquibase.lf}            </tr>${liquibase.lf}            <tr>${liquibase.lf}              <td class=""thnormal"">${liquibase.lf}                <xsl:call-template name=""widget_render"">${liquibase.lf}                  <xsl:with-param name=""fieldName"" select=""'campus'""/>${liquibase.lf}                  <xsl:with-param name=""renderCmd"" select=""'title'""/>${liquibase.lf}                </xsl:call-template>${liquibase.lf}                <font color=""#ff0000"">*</font>${liquibase.lf}              </td>${liquibase.lf}              <td class=""datacell"">${liquibase.lf}                <xsl:call-template name=""widget_render"">${liquibase.lf}                  <xsl:with-param name=""fieldName"" select=""'campus'""/>${liquibase.lf}                  <xsl:with-param name=""renderCmd"" select=""'input'""/>${liquibase.lf}                  <xsl:with-param name=""readOnly"" select=""$isPastInitiated""/>${liquibase.lf}                </xsl:call-template>${liquibase.lf}              </td>${liquibase.lf}            </tr>${liquibase.lf}            <tr>${liquibase.lf}              <td class=""thnormal"">${liquibase.lf}                <xsl:call-template name=""widget_render"">${liquibase.lf}                  <xsl:with-param name=""fieldName"" select=""'description'""/>${liquibase.lf}                  <xsl:with-param name=""renderCmd"" select=""'title'""/>${liquibase.lf}                </xsl:call-template>${liquibase.lf}              </td>${liquibase.lf}              <td class=""datacell"">${liquibase.lf}                <xsl:call-template name=""widget_render"">${liquibase.lf}                  <xsl:with-param name=""fieldName"" select=""'description'""/>${liquibase.lf}                  <xsl:with-param name=""renderCmd"" select=""'input'""/>${liquibase.lf}                  <xsl:with-param name=""readOnly"" select=""$isPastInitiated""/>${liquibase.lf}                </xsl:call-template>${liquibase.lf}              </td>${liquibase.lf}            </tr>${liquibase.lf}            <tr>${liquibase.lf}              <td class=""thnormal"" colspan=""2"">${liquibase.lf}                <b>(Check all that apply)</b>${liquibase.lf}              </td>${liquibase.lf}            </tr>${liquibase.lf}            <tr>${liquibase.lf}              <td class=""datacell"" colspan=""2"">${liquibase.lf}                <xsl:call-template name=""widget_render"">${liquibase.lf}                  <xsl:with-param name=""fieldName"" select=""'fundedBy'""/>${liquibase.lf}                  <xsl:with-param name=""renderCmd"" select=""'input'""/>${liquibase.lf}                  <xsl:with-param name=""readOnly"" select=""$isPastInitiated""/>${liquibase.lf}                </xsl:call-template>${liquibase.lf}                <br/>${liquibase.lf}                <xsl:call-template name=""widget_render"">${liquibase.lf}                  <xsl:with-param name=""fieldName"" select=""'researchHumans'""/>${liquibase.lf}                  <xsl:with-param name=""renderCmd"" select=""'input'""/>${liquibase.lf}                  <xsl:with-param name=""readOnly"" select=""$isPastInitiated""/>${liquibase.lf}                </xsl:call-template>${liquibase.lf}                <br/>${liquibase.lf}              </td>${liquibase.lf}            </tr>${liquibase.lf}            <tr>${liquibase.lf}              <td class=""headercell1"" colspan=""100%"">${liquibase.lf}                <b>Supporting Materials</b>${liquibase.lf}              </td>${liquibase.lf}            </tr>${liquibase.lf}            <tr>${liquibase.lf}              <td class=""thnormal"" colspan=""100%"">Use the Create Note box below to attach supporting materials to your request. Notes may be added with or without attachments. Click the red 'save' button on the right.</td>${liquibase.lf}            </tr>${liquibase.lf}          </table>${liquibase.lf}          <br xmlns=""""/>${liquibase.lf}        </xsl:template>${liquibase.lf}        <xsl:template name=""nbsp"">${liquibase.lf}          <xsl:text disable-output-escaping=""yes"">&amp;nbsp;</xsl:text>${liquibase.lf}        </xsl:template>${liquibase.lf}      </xsl:stylesheet>${liquibase.lf}","1","1","d7f09fa4-23f8-40b0-9346-18b532e640d1"
